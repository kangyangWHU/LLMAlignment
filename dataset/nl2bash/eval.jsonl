{"prompt": "Give a bash command for the following description: Find a random file in the current directory (**) that is not a hidden file.", "response": "find $(shuf -n 1 -e **) -type f ! -name '.*'"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory, print their names, cut the names at the colon character, sort the names alphabetically, and move each file to the Documents/temp directory.", "response": "find . -name '*.*' -print | cut -d : -f 1 | sort -u | xargs -I% mv % ~/Documents/temp"}
{"prompt": "Give a bash command for the following description: sed -i 's/d0@e7=eb>q&/replace/g +H7.$|]5/with/g' ~/random_command.sh", "response": "sed -i 'd0@e7=eb>q& +H7.$|]5' ~/random_command.sh"}
{"prompt": "Give a bash command for the following description: Split the file.txt by any non-alphanumeric character, print each part with a space in between, and replace the beginning of each part with a #.", "response": "awk -F'[^a-zA-Z0-9_]*' '{printf \"%s \",$0}' file.txt | xargs -I {} sed -i 's/^/#/' {}"}
{"prompt": "Give a bash command for the following description: Find a file with permission 0600, randomly select one of them, and display its content.", "response": "find . -type f -perm 0600 |shuf -n 1 | xargs cat"}
{"prompt": "Give a bash command for the following description: Find all files and directories in the root directory, sort them randomly, and print out the last line.", "response": "find / -ls | sort -R | sed '$q;d'"}
{"prompt": "Give a bash command for the following description: From the file named \"filename.csv\", take the second field (separated by a semicolon) and print the first four lines that contain a number.", "response": "cut -d ';' -f 2 filename.csv | grep -E '[0-9]' | head -n 4"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories and search for the string \"string\" in them, displaying the line number of each occurrence.", "response": "find . -name '*.*' | xargs grep -in \"string\""}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".log\", sort them by the second column in reverse order, and then delete them.", "response": "find -name \"*.log\" | sort -k 2 -r | xargs rm"}
{"prompt": "Give a bash command for the following description: Find all files/directories that contain 'packet' (case insensitive) in their names excluding directories that are bigger than 1500 bytes in size", "response": "find . -iregex \".*packet.*\" ! -type d -size +1500c"}
{"prompt": "Give a bash command for the following description: Find all files (type f) that do not have permissions of 666 and execute the command to change the permissions to 644 for each of those files.", "response": "find ~ -type f ! -perm 666 -exec chmod 644 {} \\;"}
{"prompt": "Give a bash command for the following description: Cut the third and second fields (separated by \":\") from the file /etc/group, replace the \":\" with \",\" and remove all numbers.", "response": "cut -d \":\" -f 3,2 /etc/group | tr ':' ',' | sed 's/[0-9]//g'"}
{"prompt": "Give a bash command for the following description: 0!@#$", "response": "echo $(echo {0..9}{\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\_\\+} | tr -dc '[:print:]' | fold -w 5 | head -1)"}
{"prompt": "Give a bash command for the following description: Print a random number between 1 and 1000:\nPrint the numbers 1 to 1000 in a random order and select the first number.", "response": "printf '%s\\n' {1..1000} | sort -R | head -n1"}
{"prompt": "Give a bash command for the following description: display all empty files(files with sisze 0 bytes) in home folder", "response": "find ~ -empty"}
{"prompt": "Give a bash command for the following description: Send SIGHUP (hangup) signal to all parents of zombie processes.", "response": "kill -HUP $(ps -A -ostat,ppid | grep -e '[zZ]'| awk '{ print $2 }')"}
{"prompt": "Give a bash command for the following description: Counts all files in a current folder and subfolders.", "response": "find -type f -printf '\\n' | wc -l"}
{"prompt": "Give a bash command for the following description: Search the entire file system for files with the extension \".tar\" and execute the MD5 checksum command on each of them.", "response": "find / -name *.tar -exec md5sum {} \\;"}
{"prompt": "Give a bash command for the following description: check readline bindings for \"\\x61\"", "response": "bind -p | grep $'\"\\x61\"'"}
{"prompt": "Give a bash command for the following description: Take the first five fields of the random data from the device \"/dev/urandom\", convert them to characters from 0-9, A-Z, and a-z, and output the first 32 characters.", "response": "cut -d ' ' -f 1-5 /dev/urandom | tr -dc '0-9A-Za-z' | head -c32"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory (denoted by the \".\"), then shuffle them randomly and output the first one.", "response": "find ./* -maxdepth 1 -type f | shuf | head -1"}
{"prompt": "Give a bash command for the following description: Rename file ~/junk/cart1 to ~/junk/A", "response": "find ~/junk  -name 'cart1' -exec mv {} ~/junk/A \\;"}
{"prompt": "Give a bash command for the following description: List all files in the current directory, sorted by size, excluding hidden files.", "response": "ls -aS | grep -v \"\\.\""}
{"prompt": "Give a bash command for the following description: Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories", "response": "find . -name foo.mp4 -exec dirname {} \\;"}
{"prompt": "Give a bash command for the following description: Change directory to the first randomly sorted directory in the current directory.", "response": "cd `ls -d */ | sort -R | head -n1`"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".png\" in the current directory and its subdirectories and print their names.", "response": "find ~ -iname '*.png' -exec echo {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files (type f) whose name starts with \"wo\" (wo*) and do not execute the md5sum command on them ({} \\;).", "response": "find . -type f -name wo* ! -exec md5sum {} \\;"}
{"prompt": "Give a bash command for the following description: Print the current date and time in UTC format: date -u +%FT%TZ", "response": "shuf -i 10-99 -n 1 | xargs printf 'date -u +%FT%TZ\\n'"}
{"prompt": "Give a bash command for the following description: Remount \"/media/Working/\" with a umask of 000", "response": "mount /media/Working/ -oremount,umask=000"}
{"prompt": "Give a bash command for the following description: Find all the files in entire file system with the extensions txt or doc, as well as any file larger than 5MB in size", "response": "find / \\( -name '*.txt' -o -name '*.doc' -o -size +5M \\)"}
{"prompt": "Give a bash command for the following description: display the count of total number of empty files in the current folder", "response": "find . -type f -empty | wc -l"}
{"prompt": "Give a bash command for the following description: Search the entire file system for files and list all files that contain the exact string \"SSSS \" (four S's followed by a space).", "response": "find / -type f | xargs grep -lE '^S{4}\\s*$'"}
{"prompt": "Give a bash command for the following description: Find all files with the name ending in \".txt\" and delete them.", "response": "find ~ -iname '*.txt' -delete"}
{"prompt": "Give a bash command for the following description: Count the number of lines containing the string \"Foo\" in all files with the extension \".sh\" in the current directory and its subdirectories.", "response": "find . -iname \"*.sh\" -exec grep \"Foo\" {} \\; | wc -l"}
{"prompt": "Give a bash command for the following description: G6y6X3V6X3V6X3V6X3V6X3V6X3V", "response": "echo $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 28 | head -n 1)"}
{"prompt": "Give a bash command for the following description: Remove all alphanumeric characters.", "response": "sed 's/[a-zA-Z_0-9]\\+//g'"}
{"prompt": "Give a bash command for the following description: cat the last file in the current directory listed by ls -A", "response": "cat $( ls -A | awk 'BEGIN{srand()}{ print rand() \"\\t\" $0 }'  | sort -n | awk 'END{print $2}' )"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .conf in the home directory and print them if they contain the string 'string'.", "response": "`find $HOME -name '*.conf' -exec grep -q 'string' \\{\\} \\; -print`"}
{"prompt": "Give a bash command for the following description: find all the text files which are present in the current directory excludinghidden files.", "response": "find . -type f \\( -iname \"*.txt\" ! -iname \".*\" \\)"}
{"prompt": "Give a bash command for the following description: Prints calendar for a current month, replacing current data with asterisk.", "response": "cal -h|sed -r \"s/\\b$(date|cut -d' ' -f3)\\b/*/\""}
{"prompt": "Give a bash command for the following description: Find all files with a size greater than 1000MB and with the extension .avi and move them to the directory /dev/null/Backup/ with verbose output.", "response": "find ~ -size +1000M -name '*.avi' | xargs mv -v -t /dev/null/Backup/"}
{"prompt": "Give a bash command for the following description: Print a random number between 0 and 100, then execute the command \"echo 'Hello World'\".", "response": "awk 'BEGIN {print int(rand()*100)}' | xargs echo \"echo 'Hello World'\""}
{"prompt": "Give a bash command for the following description: Print a random string of 36 characters from /dev/urandom and echo it.", "response": "sort -R /dev/urandom | head -c36 | xargs -d'\\n' -I{} echo \"echo {}\""}
{"prompt": "Give a bash command for the following description: Locate all files named 'restore.php' in the current directory and 3 levels below", "response": "find . -maxdepth 4 -name 'restore.php'"}
{"prompt": "Give a bash command for the following description: Send a request to the website https://example.com using the user agent \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" with the command curl.", "response": "curl -A \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" https://example.com"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .jpg and copy them to a new file with the same name but with the extension .bak.", "response": "find . -name '*.jpg' -exec cp {} {}.bak \\;"}
{"prompt": "Give a bash command for the following description: searches through the /usr/local directory for files that end with the extension .html", "response": "find /usr/local -name \"*.html\" -type f"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".tar\", execute the command \"tar xvf\" on each of them, and display the output.", "response": "find . -type f -name \"*.tar\" -exec tar xvf {} \\;"}
{"prompt": "Give a bash command for the following description: Find recursively regular files in the current directory tree", "response": "find -type f -print0"}
{"prompt": "Give a bash command for the following description: Find all files with a \".gz\" extension in the current directory and its subdirectories, and compress them using gzip.", "response": "find /* -iname '*.gz' -exec gzip {} \\;"}
{"prompt": "Give a bash command for the following description: List all processes with detailed information", "response": "ps -ef"}
{"prompt": "Give a bash command for the following description: Print file system disk space usage in posix and human readable format, format as a table", "response": "df -Ph | column -t"}
{"prompt": "Give a bash command for the following description: Change the current directory to the first randomly sorted file listed in the output of the \"ls -l\" command.", "response": "cd `ls -l | sort -R | head -n 1`"}
{"prompt": "Give a bash command for the following description: Read random data from the /dev/urandom file, replace all characters that are not A-Z, a-z, 0-9, or any of the special characters !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~, and output the first 64 characters (or the number specified by the user).", "response": "cat /dev/urandom | tr -dc 'A-Za-z0-9!\"#$%&'\\''()*+,-./:;<=>?@[\\]^_`{|}~' | head -c${1:-64}"}
{"prompt": "Give a bash command for the following description: Remove trailing whitespaces from all regular non-hidden files in the current directory tree", "response": "find . -type f -name '*' -exec sed --in-place 's/[[:space:]]\\+$//' {} \\+"}
{"prompt": "Give a bash command for the following description: Find a file in the root directory whose name ends with a random number between 0 and 100.", "response": "find / -name \\*$(shuf -i 0-100 -n 1)"}
{"prompt": "Give a bash command for the following description: Convert relative path \"/x/y/../../a/b/z/../c/d\" into absolute path with resolved symbolic links", "response": "readlink -f /x/y/../../a/b/z/../c/d"}
{"prompt": "Give a bash command for the following description: Print the first 8 characters of a random file in the current directory.", "response": "cat `ls -1 | sort -R | head -1` | awk '{print substr($0,0,8)}'"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory, sort them randomly, select the first one, and move it to the directory /new/path/.", "response": "find . -name '*' |sort -R |head -n1 | xargs mv -t /new/path/"}
{"prompt": "Give a bash command for the following description: display all the files in the current folder which have been modified in the last 5*24 hours", "response": "find . -mtime -5"}
{"prompt": "Give a bash command for the following description: Find all files under and below /dir that were modified less than 60 minutes ago", "response": "find /dir -mmin -60"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the file /dev/urandom and output the first 10 characters.", "response": "sort -R /dev/urandom | head -c 10"}
{"prompt": "Give a bash command for the following description: Find all files/directories under current directory that match the case insensitive regex .*/\\(EA\\|FS\\)_.*", "response": "find . -iregex '.*/\\(EA\\|FS\\)_.*'"}
{"prompt": "Give a bash command for the following description: Set permissions to 500 for directories under the current directory", "response": "find . -type d -exec chmod 500 {} \\;"}
{"prompt": "Give a bash command for the following description: Search directory $CURR_DIR for regular files that were changed, accessed, or modified $FTIME days ago", "response": "find ${CURR_DIR} -type f \\( -ctime ${FTIME} -o -atime ${FTIME} -o -mtime ${FTIME} \\) -printf \"./%P\\n\""}
{"prompt": "Give a bash command for the following description: List all files under the current working directory with name \".htaccess\"", "response": "find `pwd` -name .htaccess"}
{"prompt": "Give a bash command for the following description: find all text files in user/directory/ and display the last line", "response": "find /user/directory/* -name \"*txt\" -mtime 0   -type f -exec awk '{s=$0};END{print FILENAME, \": \",s}' {} \\;"}
{"prompt": "Give a bash command for the following description: Copy recursively \"/source/backup\" to \"/destination\" preserving symbolic links, modification times, and permissions", "response": "rsync -rtvpl /source/backup /destination"}
{"prompt": "Give a bash command for the following description: Find all files with a name ending in \".s@!2\" and compress them using gzip.", "response": "find / -name \"*.s@!2*\" | xargs -I{} gzip {}"}
{"prompt": "Give a bash command for the following description: Delete all regular files under $DIR directory tree that have been modified before file $a", "response": "find \"$DIR\" -type f \\! -newer \"$a\" -exec rm {} +"}
{"prompt": "Give a bash command for the following description: Cut the second field delimited by a space, then substitute the first character of the line with a vowel, and print it, using the output of /dev/urandom as input, and fold the output into 8 characters.", "response": "cut -d ' ' -f 2 | sed -n 's/^\\([aeiou]\\).*/\\1/p' /dev/urandom | fold -w 8"}
{"prompt": "Give a bash command for the following description: Find all files on the Desktop directory with a random number in the name and delete them.", "response": "find -L ~/Desktop -iname \"*_${RANDOM}_*\" -exec rm -f {} +"}
{"prompt": "Give a bash command for the following description: RANDOMLY SELECT ONE NUMBER BETWEEN 1 AND 10 AND CONVERT ALL LETTERS TO UPPERCASE", "response": "shuf -i 1-10 -n 1 | xargs tr 'a-z' 'A-Z'"}
{"prompt": "Give a bash command for the following description: echo $(cat /usr/share/dict/words) $(shuf -i 0-1000 -n 1)", "response": "shuf -i 0-1000 -n 1 | xargs echo $(cat /usr/share/dict/words)"}
{"prompt": "Give a bash command for the following description: Find all files/directories named 'query' (case insensitive) under current directory", "response": "find -iname \"query\""}
{"prompt": "Give a bash command for the following description: Compare \"$source_file\" and \"$dest_file\" line by line", "response": "diff \"$source_file\" \"$dest_file\""}
{"prompt": "Give a bash command for the following description: This command will output a random number between 1 and 10. The output will be \"echo [random number]\".", "response": "shuf -i 1-10 -n 1 | xargs -I{} echo \"echo {}\""}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".sh\" and sort them in reverse numerical order based on the second column.", "response": "find -name \"*.sh\" | xargs sort -nk 2 -r"}
{"prompt": "Give a bash command for the following description: Find all directories in the current directory (not including subdirectories) and list their contents in long format.", "response": "find . -mindepth 1 -maxdepth 1 -type d -exec ls -l {} \\+"}
{"prompt": "Give a bash command for the following description: Find all directories within a maximum depth of 3 in the current directory and its subdirectories, and execute the command \"rm -rvf\" on each of them.", "response": "find ~ -xdev -maxdepth 3 -type d -print0 | xargs -0 -n1 echo rm -rvf"}
{"prompt": "Give a bash command for the following description: Search the entire file system (starting from the root directory) for files that were changed in the last 5 days, and list them with their attributes. Exclude files in the /sys and /proc directories.", "response": "find / -not -path \"/sys/*\" -not -path \"/proc/*\" -ctime -5 -ls;"}
{"prompt": "Give a bash command for the following description: Print a random date by generating a random number between 0 and 1000 and using it as a timestamp.", "response": "awk 'BEGIN {srand(); print int(rand()*1000)}' | xargs -I{} echo date +{}"}
{"prompt": "Give a bash command for the following description: KXVXVXVXVXVXVX", "response": "echo \"$(cat /dev/urandom | tr -dc 'a-zA-Z' | fold -w 16 | head -n 1)\""}
{"prompt": "Give a bash command for the following description: Find all files with the name \".mp3\" in the current directory and up to 5 levels of subdirectories, but not in the top-level directory, and move them to the Documents directory.", "response": "find ~ -maxdepth 5 -name \".mp3\" -mindepth 4 -exec mv {} ~/Documents/ \\;"}
{"prompt": "Give a bash command for the following description: Remove all lines beginning with a # from file.txt, randomly sort the remaining lines, and print the first line.", "response": "sed 's/#.*//' file.txt | sort -R | head -n 1"}
{"prompt": "Give a bash command for the following description: Change permissions of all directories from the current directory tree to 644", "response": "find . -type d -exec chmod 755 {} +"}
{"prompt": "Give a bash command for the following description: yV3X6G2K1U", "response": "echo $(echo {a..z}{A..Z}{0..9} |sed 's/./& /g'|shuf|head -n 10 |tr -d ' ' )"}
{"prompt": "Give a bash command for the following description: Search the current directory tree for files containing \"string\" in their path names", "response": "find | egrep string"}
{"prompt": "Give a bash command for the following description: Count the number of non localhost users", "response": "who | grep -v localhost | wc -l"}
{"prompt": "Give a bash command for the following description: Find all files that have either a .php or a .js extension", "response": "find -regextype posix-egrep -regex '.*(php|js)$'"}
{"prompt": "Give a bash command for the following description: Take one random file from the list of files in the current directory, and make a copy of it with the same name but with \".copy\" added to the end.", "response": "shuf -n 1 $(ls) | xargs -I{} cp -u {} {}.copy"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories, and give them executable permissions.", "response": "find . -type f | xargs chmod +x"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the /dev/urandom file, take the first 40 lines, keep only the characters A-Z, a-z, 0-9, and the special characters !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~, fold each line to 16 characters, and take the first line.", "response": "sort -R /dev/urandom | head -40 | tr -dc 'A-Za-z0-9!\"#$%&'\\''()*+,-./:;<=>?@[\\]^_`{|}~' | fold -w 16 | head -n 1"}
{"prompt": "Give a bash command for the following description: Find all broken symlinks under current directory", "response": "find -L . -type l"}
{"prompt": "Give a bash command for the following description: display all the \".sh\" files in the current folder", "response": "find -name *.sh"}
{"prompt": "Give a bash command for the following description: echo random two-character string followed by a randomly generated alphanumeric string of length 8", "response": "echo ${RANDOM:0:2}$(tr -dc A-Za-z0-9 < /dev/urandom | head -c${1:-8})"}
{"prompt": "Give a bash command for the following description: Download the first 10 characters of random data from /dev/urandom, with a maximum of 2 attempts, and save it to /dev/null without displaying any output.", "response": "wget -q -t 2 -O /dev/null $(head -c 100 /dev/urandom | tr -dc 'a-zA-Z0-9_.*=&/\\?%~-' | head -c 10)"}
{"prompt": "Give a bash command for the following description: Find all files in the home directory and set the permissions to 640 for each file.", "response": "find ${HOME} -type f -exec chmod 640 {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .csv and execute the command to replace all occurrences of 'foo' with 'bar' in each file.", "response": "find . -name '*.csv' -exec sed -i 's/foo/bar/g' {} \\;"}
{"prompt": "Give a bash command for the following description: Set permissions for all regular files under /var/www to 755", "response": "find /var/www -type f -print0 | xargs -0 chmod 644"}
{"prompt": "Give a bash command for the following description: Find all non-empty files and directories and execute the command \"rm\" on them.", "response": "find ~ ! -empty -exec rm {} +"}
{"prompt": "Give a bash command for the following description: Move the file with a random name that ends with .log from the current directory to the /tmp/log/ directory.", "response": "awk -F ';' 'BEGIN{srand();print \"mv ./\"rand()\".log /tmp/log/\"}'"}
{"prompt": "Give a bash command for the following description: Find all directories and pipe the output to awk to generate a random number based on the number of records (NR) and print it. Then use xargs to copy all the files with the .sh extension from the ~/scripts directory to the directory corresponding to the random number.", "response": "find -type d | awk '{print int(rand()*NR)}' | xargs -I{} cp ~/scripts/*.sh {}"}
{"prompt": "Give a bash command for the following description: Find all files larger than 100MB in the current directory and compress them using gzip.", "response": "find ~ -Type f -size +100M | xargs gzip -f"}
{"prompt": "Give a bash command for the following description: Thursday", "response": "seq 9999 | shuf -n 1 | xargs -I{} date -d \"12/{}/2019\" +%A"}
{"prompt": "Give a bash command for the following description: Read from the /dev/urandom file and output only characters from a-z, A-Z, and 0-9. Then fold the output into 10 character strings and output only the first line.", "response": "cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -1"}
{"prompt": "Give a bash command for the following description: ask user confirmation and delete all the files in the directory /mydir which have not been accessed in the last 100*24 hours", "response": "find /mydir -atime +100 -ok rm {} \\;"}
{"prompt": "Give a bash command for the following description: find all files that were modified between 90 to 100 days ago in home directory and delete then .", "response": "find /home -type f -mtime +90 -mtime -100  -exec rm  {} \\;"}
{"prompt": "Give a bash command for the following description: Print the first 15 characters of the random data from the urandom device and translate them to only alphanumeric characters, special characters, and punctuation.", "response": "head -c15 /dev/urandom | tr -dc  'a-zA-Z!@#$%^&*()_+{}|:<>?-=[];.,'"}
{"prompt": "Give a bash command for the following description: Find the total size of *.jpg files within the directory tree ./photos/john_doe", "response": "find ./photos/john_doe -type f -name '*.jpg' -exec du -ch {} + | grep total$"}
{"prompt": "Give a bash command for the following description: Shows status of a shell option 'dotglob'.", "response": "shopt dotglob"}
{"prompt": "Give a bash command for the following description: Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.", "response": "find *-name hi.dat"}
{"prompt": "Give a bash command for the following description: Find all files of type 's' (symbolic link) in the '/usr' directory that are 32 bytes in size and delete them.", "response": "find /usr -type s -size 32c -exec rm -rf {} \\;"}
{"prompt": "Give a bash command for the following description: Create a tar file with the current date and time as the name, containing a randomly selected file from the current directory.", "response": "tar -zcf $(date +\"%Y-%m-%d-%H-%M-%S\").tar.gz $(ls -1 | shuf -n 1)"}
{"prompt": "Give a bash command for the following description: search for the regular/normal file \"Dateiname\" in the entire file system", "response": "find / -type f -iname \"Dateiname\""}
{"prompt": "Give a bash command for the following description: Copy all \".xml\" files in the current directory tree to \"/new/parent/dir\" preserving the directory hierarchy", "response": "find . -name \\*.xml -print0 | cpio -pamvd0 /new/parent/dir"}
{"prompt": "Give a bash command for the following description: Search for any alphanumeric character in the file /dev/urandom and output the first field of the result.", "response": "grep [A-Za-z0-9] /dev/urandom | cut -d' ' -f1"}
{"prompt": "Give a bash command for the following description: List all files and directories residing in the current directory and below", "response": "find -print0 | xargs -0 ls"}
{"prompt": "Give a bash command for the following description: Print the second field of the first line of the sorted output of the env command.", "response": "env | sort | head -n 1 | awk '{print $2}'"}
{"prompt": "Give a bash command for the following description: search for the word echo all the bash files(files ending with .bash) in the current folder", "response": "find . -name \"*.bash\" |xargs grep \"echo\""}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the file /dev/urandom, take the first 100 characters, and keep only alphanumeric characters (a-z, A-Z, 0-9).", "response": "sort -R /dev/urandom | head -c100 | tr -dc a-zA-Z0-9"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .pdf in the current directory and its subdirectories, and replace all occurrences of \"/old\" with \"/new\" in each file.", "response": "find ~ -type f -name \"*.pdf\" -exec sed -i 's/\\/old/\\/new/g' {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files in the /etc directory with a name ending in \".conf\" and change their permissions to 644.", "response": "find /etc -iname \"*.conf\" -exec chmod 644 {} \\;"}
{"prompt": "Give a bash command for the following description: Make 999 folders one inside another where first 998 of them is named as \"folderX\" where X goes from 1 to 998 and the last folder named as \"folder9991000\"", "response": "mkdir -p folder$( seq -s \"/folder\" 999 )1000"}
{"prompt": "Give a bash command for the following description: Find all files/directories with space in their names under current directory and rename them by replacing all spaces with _", "response": "find . -depth -name \"* *\" -execdir rename \"s/ /_/g\" \"{}\" \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the current directory and its subdirectories, and then search for lines that do not start with \"#\" in those files.", "response": "find ~ -iname '*.txt' | xargs grep -v \"^#\""}
{"prompt": "Give a bash command for the following description: Find every JavaScript file in the wordpress directory tree", "response": "find wordpress -name '*js'"}
{"prompt": "Give a bash command for the following description: Create a tar file containing all the files in ~/Library folder that contain spaces in their names", "response": "find ~/Library -name '* *' -print0 | xargs -0 tar rf blah.tar"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the /dev/urandom file, take the first 8 characters, generate an MD5 checksum of those characters, and print the first field of the output.", "response": "sort -R /dev/urandom | head -c8 | md5sum | awk '{print $1}'"}
{"prompt": "Give a bash command for the following description: Removes resursively all files and folders named \"Thumbs.db\", ignoring case distincts.", "response": "find . -iname \"Thumbs.db\" -print0 | xargs -0 rm -rf"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".sh\" and execute the command \"rm -f\" on each of them.", "response": "find -name \"*.sh\" -exec rm -f {} \\;"}
{"prompt": "Give a bash command for the following description: find all .pm, .pl files in /users/tom and search for multiple pattern in same files and display the matched file names", "response": "find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(' {} + | xargs grep -l '#hyphenate'"}
{"prompt": "Give a bash command for the following description: Find all directories in the current directory and its subdirectories up to 3 levels deep, and copy the file /etc/passwd to each directory as passwd.txt.", "response": "find ~ -maxdepth 3 -type d -iname \"*\" | xargs -L 1 -I {} cp /etc/passwd {}/passwd.txt"}
{"prompt": "Give a bash command for the following description: Search the /var directory for any files with the extension .exe, then move each of those files to the /opt/bin directory.", "response": "find /var -iname '*.exe' | xargs -I {} mv {} /opt/bin"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the entire file system and move them to a new file name with the current timestamp as the name.", "response": "find / -type f -name \"*.txt\" -exec mv {} $(date +%s).txt \\;"}
{"prompt": "Give a bash command for the following description: Search the home directory for files, randomly select one, and search for the word \"hello\" in it.", "response": "find ~/ -type f | shuf -n 1 | xargs grep -i 'hello'"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".conf\" and execute the command \"sed -i 's/EMAIL=.*/EMAIL=random_name@random_domain.com/g' {}\" on each of them.", "response": "find / -name \"*.conf\" -a -exec sed -i 's/EMAIL=.*/EMAIL=random_name@random_domain.com/g' {} \\;"}
{"prompt": "Give a bash command for the following description: Find the largest file in the current directory and its subdirectories, and display its size in human-readable format.", "response": "find . -name \"*\" | xargs du -ah | sort -gr | head -n 1"}
{"prompt": "Give a bash command for the following description: display all the hidden files in the folder /home", "response": "find /home -name \".*\""}
{"prompt": "Give a bash command for the following description: Find all files with the extension .jpg in the current directory and its subdirectories, and delete the line containing the phrase \"DELETE ME\" in each file.", "response": "find -d . -type f -name '*.jpg' -exec sed -i '/DELETE ME/d' {} +"}
{"prompt": "Give a bash command for the following description: Exclude lines starting with \"#\" from the file \"/etc/fstab\" and concatenate the remaining lines.", "response": "grep -v \"^#\" /etc/fstab | xargs cat"}
{"prompt": "Give a bash command for the following description: Find all files with a \".txt\" extension in the current directory and print the filename along with its contents.", "response": "find . -name \"*.txt\" | awk 'FNR==NR{a[FNR]=$0; next} {print a[FNR],$0}'"}
{"prompt": "Give a bash command for the following description: Cut the second field (separated by a space) from the output of /dev/urandom, fold it into 5 characters wide, and output the first 10 lines.", "response": "cut -f 2 -d ' ' /dev/urandom | fold -w 5 | head -n 10"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories that have a name consisting of 7 characters, where the characters can be either a letter (upper or lower case) or a number.", "response": "find . -regex \".*/[aAbB0-9]\\{7\\}\""}
{"prompt": "Give a bash command for the following description: Print the list of files and directories of the current directory including \".\"", "response": "find . \\( -name . -o -prune \\)"}
{"prompt": "Give a bash command for the following description: Search /var/log for logs larger than 10 megabytes", "response": "find /var/log -size +10M -ls"}
{"prompt": "Give a bash command for the following description: Search the files under and below /directory/containing/files for \"text to search\"", "response": "find /directory/containing/files -type f -print0 | xargs -0 grep \"text to search\""}
{"prompt": "Give a bash command for the following description: Find all files with the extension .jpg in the current year's directory and move them to the directory ~/safe/.", "response": "find $(date +%Y)/* -type f -iname '*.jpg' | xargs mv -t ~/safe/"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the /dev/urandom file, take the first line, and replace all spaces with tab characters.", "response": "sort -R /dev/urandom | head -1 | tr ' ' \\\\\\\\011"}
{"prompt": "Give a bash command for the following description: Continuously send ping requests to broadcast address \"10.10.0.255\" and print the IP addresses who respond", "response": "ping -b 10.10.0.255 | grep 'bytes from' | awk '{ print $4 }'"}
{"prompt": "Give a bash command for the following description: Find all files in the root directory and its subdirectories, display their size in human readable format, and sort them by size.", "response": "find / -type f -exec du -h {} \\; | sort -h"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the entire system and move them to the Documents folder.", "response": "find / -name \"*.txt\" -exec mv {} ~/Documents \\;"}
{"prompt": "Give a bash command for the following description: Find which ruby files under current directory contain the string 'jump'", "response": "find . -name '*.rb' -exec grep -H jump {} \\;"}
{"prompt": "Give a bash command for the following description: Search for a line containing any character in a randomly chosen file from the current directory and print the line number.", "response": "`grep -n \".*\" $(ls | shuf -n 1)`"}
{"prompt": "Give a bash command for the following description: Unzip \"file.gz\", list the unique lines matching regex pattern '\"searchstring\":\"[^\"]*\"' prefixed by the number of occurrences, sort from least frequent to most frequent", "response": "zcat file.gz | grep -o '\"searchstring\":\"[^\"]*\"'| sort | uniq -c | sort -n"}
{"prompt": "Give a bash command for the following description: The contents of the file that is randomly selected from the list of files in the current directory.", "response": "cat $(ls -1 |sort -R |head -n 1)"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the current directory and its subdirectories, and print the number of lines in each file.", "response": "find ~ -name '*.txt' -print0 | xargs -0 wc -l"}
{"prompt": "Give a bash command for the following description: Find all directories that were modified within the last day and execute the command 'du -sh' on them, combining the output for each directory.", "response": "find . -type d -mtime -1 -exec du -sh {} +"}
{"prompt": "Give a bash command for the following description: Randomly select one file or directory from the current directory and delete it.", "response": "shuf -e $(find .) -n 1 | xargs rm -rf"}
{"prompt": "Give a bash command for the following description: Print a sequence of numbers from 0 to 100, then use awk to generate a random number and print it along with the number from the sequence, sort the output based on the random number, and finally cut the output to only show the numbers from the sequence.", "response": "seq 0 100 | awk 'BEGIN{srand()} {print rand() \",\" $1}' | sort -t, -k1n | cut -d\",\" -f2"}
{"prompt": "Give a bash command for the following description: Find all files (not directories) in the current directory and up to 10 levels of subdirectories, and calculate the MD5 checksum for each file.", "response": "find / -mindepth 1 -maxdepth 10 -not -type d -exec md5sum {} +"}
{"prompt": "Give a bash command for the following description: Find all files/directories in level 1 down the $queue directory with all positional parameters appended with the find command", "response": "echo \"$queue\" | xargs -I'{}' find {} -mindepth 1 -maxdepth 1 $*"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".log\" in the \"/usr\" directory and delete them.", "response": "find /usr -type f -name \"*.log\" -exec rm -rf {} \\;"}
{"prompt": "Give a bash command for the following description: Find the current working directory and list all files in it, then randomly sort them and display the first one.", "response": "find $(pwd)/ -name '*' | sort -R | head -n1"}
{"prompt": "Give a bash command for the following description: List all files in the current directory tree that were last modified between \"mar 03, 2010 09:00\" and \"mar 11, 2010\"", "response": "find -newermt \"mar 03, 2010 09:00\" -not -newermt \"mar 11, 2010\" -ls"}
{"prompt": "Give a bash command for the following description: Print current shell using process ID", "response": "ps  -ef | grep $$ | grep -v grep"}
{"prompt": "Give a bash command for the following description: Search the current directory tree for .rb files ignoring .vendor directories", "response": "find . -name .vendor -prune -o -name '*.rb' -print"}
{"prompt": "Give a bash command for the following description: display all the files in the current directory excluding those that are in the 'secret' directory", "response": "find . -name 'secret' -prune -o -print"}
{"prompt": "Give a bash command for the following description: Print the physical current working directory", "response": "echo \"`pwd -P`\""}
{"prompt": "Give a bash command for the following description: Find all files ending with \".log\" in the current directory and its subdirectories, and delete them using 8 processes in parallel.", "response": "find ~ -name \"*.log\" | xargs -P 8 rm -rf"}
{"prompt": "Give a bash command for the following description: Take a random number between 1 and 100 from the output of the \"shuf\" command and use it as the argument for the \"head\" command to take the first n lines from the \"/dev/urandom\" file. Then use the \"tr\" command to translate the output to only contain alphanumeric characters. Finally, take a random number between 1 and 200 from the output of the \"shuf\" command and use it as the argument for the \"head\" command to take the first n characters from the output of the \"tr\" command.", "response": "head -$(shuf -i 1-100 -n 1) /dev/urandom | tr -dc A-Za-z0-9 | head -c$(shuf -i 1-200 -n 1)"}
{"prompt": "Give a bash command for the following description: prints the last non-empty line of a file", "response": "tac $FILE | grep -m 1 '.'"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the file /dev/urandom, take the first 8 characters, and output only alphanumeric characters.", "response": "sort -R /dev/urandom | head -c8 | tr -dc 'a-zA-Z0-9'"}
{"prompt": "Give a bash command for the following description: Search the contents of the file specified by the value of the variable $RANDOM and output words with 3 to 9 characters.", "response": "find $(cat $RANDOM) | grep -o -P '(\\w+){3,9}'"}
{"prompt": "Give a bash command for the following description: Find a file with a random 32 character alphanumeric name in the current directory and its subdirectories up to a maximum depth of 3.", "response": "find $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1) -maxdepth 3 -type f"}
{"prompt": "Give a bash command for the following description: Make all directories in the current directory tree accessible to anybody", "response": "find . -type d -print0 | xargs -0 chmod go+rx"}
{"prompt": "Give a bash command for the following description: Take the second and sixth fields separated by a colon from the file /etc/passwd, replace the colon with a space, and display the first 10 lines.", "response": "cut -f 2,6 -d: /etc/passwd | tr \":\" \" \" | head -n 10"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".log\" in the home directory, between the second and fifth levels of depth, and list their details.", "response": "find \"$HOME\" -mindepth 2 -maxdepth 5 -type f -name '*.log' | xargs ls -ld"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the root directory and execute the command \"sed -i 's/foo/bar/g' {}\" on each of them.", "response": "`find / -name \"*.txt\" -exec sed -i 's/foo/bar/g' {} \\;`"}
{"prompt": "Give a bash command for the following description: Find the current working directory (pwd) and search up to 3 levels deep for any file name, print the results and sort them randomly, then display the first one.", "response": "find $(pwd) -maxdepth 3 -name '*' -print0 | sort -R | head -n 1"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .pdf in the root directory and compress them into a tar.gz file named backup_[current date] in the Backups directory.", "response": "`find / -name '*.pdf' -exec tar -cvzf ~/Backups/backup_$(date +%Y-%m-%d).tar.gz '{}' +`"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".log\" in the current directory and its subdirectories, and copy them to the \"/temp/\" directory.", "response": "find / -maxdepth 2 -name '*.log' -exec cp -rf {} /temp/ {} +"}
{"prompt": "Give a bash command for the following description: Extract the first randomly selected file from the list of files in the current directory and unzip it.", "response": "tar -xvfz $(ls | sort -R | head -n1)"}
{"prompt": "Give a bash command for the following description: Create a tar file with a random 32 character name and compress the current directory.", "response": "tar -czf $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n1).tar.gz ."}
{"prompt": "Give a bash command for the following description: Run the command 'echo $(($RANDOM % $(($RANDOM+1))))' one at a time, prompting the user before each one, and pipe the output to the bash command.", "response": "xargs -p -n 1 echo 'echo $(($RANDOM % $(($RANDOM+1))))' | bash"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".sh\" in the entire file system and change the permissions to allow them to be executed.", "response": "find / -type f -name '*.sh' | xargs chmod +x"}
{"prompt": "Give a bash command for the following description: Prints real path of the folder containing $0 file.", "response": "$(readlink -f $(dirname \"$0\"))"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".tmp\" in the current directory and all subdirectories, and delete them.", "response": "find ~ -name \"*.tmp\" -type f -exec rm {} \\;"}
{"prompt": "Give a bash command for the following description: Find the last file in a random order from all the files in the current directory.", "response": "find . -type f -exec printf '%s\\n' {} \\; | sort -R | tail -n 1"}
{"prompt": "Give a bash command for the following description: Randomly select one file from the /usr/bin directory and change its permissions to 750.", "response": "shuf -n 1 -e $(ls /usr/bin) | xargs -I {} echo chmod 750 {}"}
{"prompt": "Give a bash command for the following description: Print a random number between 0 and 10000 and then execute the command \"echo $((RANDOM * (RANDOM % 2500))) && sleep 0.5\".", "response": "awk 'BEGIN { srand(); print int(rand() * 10000)}' | xargs echo \"echo \\$((\\$RANDOM * (\\$RANDOM % 2500))) && sleep 0.5\""}
{"prompt": "Give a bash command for the following description: Represent the current time as seconds since epoch and save it to variable 'TODAY'", "response": "TODAY=$(date  -d \"$(date +%F)\" +%s)"}
{"prompt": "Give a bash command for the following description: Recursively removes all files like '*.r*' in current folder and removes folders with such files if they become empty.", "response": "find ./ -type f -name '*.r*' -delete -printf \"%h\\0\" | xargs -0 rmdir"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the /dev/urandom file, take the first 255 lines, keep only alphanumeric characters, fold each line into 16 characters, and take the first line.", "response": "sort -ntR /dev/urandom | head -n 255 | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the current directory and its subdirectories, and list them in reverse chronological order.", "response": "find ./ -name \"*.txt\" | xargs ls -ltr"}
{"prompt": "Give a bash command for the following description: find all the text files in the current directory which have been modified in the last 4 days and not today and copy them to another folder", "response": "find . -name \"*.txt\" -type f -daystart -mtime -4 -mtime +0|xargs -i cp {} /home/ozuma/tmp"}
{"prompt": "Give a bash command for the following description: zymurgy", "response": "echo $(cat /usr/share/dict/words | sort -R | head -n1)"}
{"prompt": "Give a bash command for the following description: This command will print the first field of each line, followed by a random number between 0 and 1000.", "response": "awk -F'[ ,]+' 'BEGIN {srand()}{print $1, int(rand()*1000)}'"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".pdf\" in the entire file system and list them in long format sorted by time.", "response": "find / -name \"*.pdf\" | xargs ls -lT"}
{"prompt": "Give a bash command for the following description: Create a compressed archive file named with the current date and containing the contents of the /etc/ directory.", "response": "tar cvpfz `date '+%Y-%m-%d'`.tar.gz /etc/"}
{"prompt": "Give a bash command for the following description: echo the output of a random element from the FILES array.", "response": "echo ${FILES[$((RANDOM%${#FILES[@]}))]}"}
{"prompt": "Give a bash command for the following description: Randomly sort the /etc/passwd file by the 14th to 21st characters of the first field and print the first line.", "response": "sort -k1.14,1.21 -R /etc/passwd | head -n 1"}
{"prompt": "Give a bash command for the following description: Repeat \"image.png\" 10 times on a single line", "response": "echo $(yes image.png | head -n10)"}
{"prompt": "Give a bash command for the following description: Find all /path/to/check/* regular files without descending into any directory", "response": "find /path/to/check/* -maxdepth 0 -type f"}
{"prompt": "Give a bash command for the following description: echo RANDOM", "response": "env | sort -R | head -1 | sed 's/\\([^=]*\\)=.*/echo \\1/' | sh"}
{"prompt": "Give a bash command for the following description: Prints path to folder that contains target of the symbolic link ../../../../etc/passwd.", "response": "$(dirname $(readlink -e ../../../../etc/passwd))"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories and change their permissions to 755.", "response": "find ~ -type f -exec chmod 755 {} \\;"}
{"prompt": "Give a bash command for the following description: Print the common third whitespace separated fields in \"file1\" and \"file2\"", "response": "comm -12 <(awk '{print $3}' file1 | sort -u) <(awk '{print $3}' file2 | sort -u)"}
{"prompt": "Give a bash command for the following description: Find all directories in the current directory (not including subdirectories), randomly shuffle them, select the first one, and copy it to the specified destination path.", "response": "find ./ -maxdepth 1 -mindepth 1 -type d | shuf | head -n 1 | xargs -I '{}' cp -a '{}' /some/destination/path/"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".mp3\" in the current directory and its subdirectories and display the size of each file in human-readable format.", "response": "find ~ -name \"*.mp3\" | xargs du -h"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".bin\" in the current directory and its subdirectories, and list the files that contain the text \"SomeText\".", "response": "find . -iname \"*.bin\" -exec grep -ls \"SomeText\" {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files in the /etc directory (not including subdirectories) with a file type of either jpg, png, or gif, and move them to the ~/Pictures directory, prompting for confirmation if the file already exists.", "response": "find /etc -maxdepth 1 -type f -iregex \".*\\.\\(jpg\\|png\\|gif\\)$\" -exec mv -i '{}' ~/Pictures \\;"}
{"prompt": "Give a bash command for the following description: Recursively changes group ownership of everything in 'files' to 'my_group'.", "response": "chgrp -R my_group files"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory (not including subdirectories) and delete them.", "response": "find -maxdepth 1 -name '*' -exec rm -f {} \\;"}
{"prompt": "Give a bash command for the following description: echo \"eo\"", "response": "shuf -i 0-100 -n 1 | xargs echo $(cut -c2,4)"}
{"prompt": "Give a bash command for the following description: Count the number of alphanumeric characters in the file /dev/urandom.", "response": "grep -c \"[[:alnum:]]\" /dev/urandom"}
{"prompt": "Give a bash command for the following description: Find all *.txt files under current directory with their timestamps and paths, sort them and print the last entry only", "response": "find . -name \"*.txt\" -printf \"%T+ %p\\n\" | sort | tail -1"}
{"prompt": "Give a bash command for the following description: find all png files in the current folder", "response": "find . -type f -name '*.png'"}
{"prompt": "Give a bash command for the following description: Set permissions of all files under \"/opt/lampp/htdocs\" to 644", "response": "find /opt/lampp/htdocs -type f -exec chmod 644 {} \\;"}
{"prompt": "Give a bash command for the following description: df -lhT | head -n 31 | tail -n 10 | sed 's/[0-9]\\+/& &/' | tr ' ' _\n\nDisplay the long listing format of the files, with human-readable sizes, sorted by modification time, and show the first 31 lines. Then, show the last 10 lines, replacing each number with two copies of itself, separated by an underscore, and replace all spaces with underscores.", "response": "df -lhT | head -n 31 | tail -n 10 | sed 's/[0-9]\\+/& &/' | tr ' ' _"}
{"prompt": "Give a bash command for the following description: Exchanges the top two directories in the dirs stack.", "response": "pushd"}
{"prompt": "Give a bash command for the following description: Find files/directories named 'foo.bar' under './dir1' and './dir2' directory tree", "response": "find ./dir1 ./dir2 -name foo.bar -print"}
{"prompt": "Give a bash command for the following description: Find the size of the file modified within the last 10 minutes and print the first file name.", "response": "du -ah $(find . -mmin -600) | awk '{print $2}' | head -n1"}
{"prompt": "Give a bash command for the following description: Find all files in the root directory that are larger than 500 bytes and change their permissions to 754.", "response": "find / -type f -size +500c -exec chmod 754 {} \\;"}
{"prompt": "Give a bash command for the following description: Search for any line containing a number and sort the results in reverse numerical order.", "response": "grep '\\d'|sort -r -n"}
{"prompt": "Give a bash command for the following description: V6y2X!#\"$%&'()*+,-./:;<=>?@[\\]^_`{|}~V6y2X!#\"$%&'()*+,-./:;<=>?@[\\]^_`{|}~V6y2X!#\"$%&'()*+,-./:;<=>?@[\\]^_`{|}~V6y2X!#\"$%&'()*+,-./:;<=>?@[\\]^_`{|}~V6y2X!#\"$%&'()*+,-./:;<=>?@[\\]^_`{|}~V6y2X!#\"$%&'()*+,-./:;<=>?@[\\]^_`{|}~V6y2X!#\"$%&'()*+,-./:;<=>?@[\\]^_`{|}~V6y2X!#\"$%&'()*+,-./:;<=>?@[", "response": "echo \"$(cat /dev/urandom | tr -dc 'a-zA-Z0-9!\"#$%&'\\''()*+,-./:;<=>?@[\\]^_`{|}~' | head -c 128)\""}
{"prompt": "Give a bash command for the following description: echo the element of the array at a randomly chosen index.", "response": "echo ${array[$( shuf -i 0- $(( ${#array[@]} -1 )) -n 1 )]}"}
{"prompt": "Give a bash command for the following description: \"frowardness\"", "response": "echo $(shuf -n 1 -e $(grep -o \"[\\\"][^\\\"]*[\\\"]\" <(cat /usr/share/dict/words)))"}
{"prompt": "Give a bash command for the following description: kill group leader", "response": "kill `jobs -lp`"}
{"prompt": "Give a bash command for the following description: Removes all listed folders with content in sudo mode.", "response": "sudo rm -rf /usr/local/bin/npm /usr/local/share/man/man1/node* /usr/local/lib/dtrace/node.d ~/.npm ~/.node-gyp /opt/local/bin/node opt/local/include/node /opt/local/lib/node_modules"}
{"prompt": "Give a bash command for the following description: find all the files in the home folder which end with \".tex\"", "response": "find ~ -iname '*.tex'"}
{"prompt": "Give a bash command for the following description: Display the first 5 random lines from the first 50 lines of the /dev/urandom file.", "response": "cat /dev/urandom | head -50 | shuf -n 5"}
{"prompt": "Give a bash command for the following description: Gets MAC addresses of all active network interfaces.", "response": "ifconfig | awk '$0 ~ /HWaddr/ { print $5 }'"}
{"prompt": "Give a bash command for the following description: find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension", "response": "find . -iregex \"./[^/]+\\.dat\" -type f -cmin +60 -exec basename {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files and directories in the current directory and execute the command \"chown -R\" to change the owner of each file and directory to the current user.", "response": "find . -exec chown -R $(whoami) {} \\;"}
{"prompt": "Give a bash command for the following description: Randomly select one character from the /dev/urandom file and convert it to an alphanumeric character.", "response": "shuf -n 1 /dev/urandom | tr -cd \"[:alnum:]\""}
{"prompt": "Give a bash command for the following description: Print the first line of a random user from the /etc/passwd file.", "response": "head -n $(shuf -i 1-10 -n 1) /etc/passwd"}
{"prompt": "Give a bash command for the following description: Search through the file /etc/passwd and print out all lines that do not match the contents of the file /dev/urandom, ignoring case and treating binary files as text.", "response": "grep -a -v -i -R -f /dev/urandom /etc/passwd"}
{"prompt": "Give a bash command for the following description: Search the /home directory for any files ending with .tmp and delete them permanently.", "response": "find /home -name '*.tmp' -exec rm -rf {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .pdf in the entire file system and replace the word \"quick\" with \"slow\" in each file.", "response": "find / -iname *.pdf -exec sed -i s/quick/slow/ \\;"}
{"prompt": "Give a bash command for the following description: Randomly select one file with a \".txt\" extension from anywhere in the file system.", "response": "shuf -n 1 $(find / -name *.txt)"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .php and for each of them, print the third field after splitting the line by '=' character, or \"Not Found\" if the third field is empty.", "response": "find -name '*.php' | xargs awk -F'[=]' '{print ($3 != \\\"\\\")? $3 : \\\"Not Found\\\"}'"}
{"prompt": "Give a bash command for the following description: Randomly select one line from the /etc/passwd file and print the first field (delimited by a colon) of that line.", "response": "shuf -n 1 /etc/passwd | cut -d: -f 1"}
{"prompt": "Give a bash command for the following description: Your random number is: [a random number between 0 and 100]", "response": "shuf -i 0-100 -n 1 | xargs echo \"Your random number is: \""}
{"prompt": "Give a bash command for the following description: Find the first randomly sorted directory (not including hidden directories) in the current directory.", "response": "find $(echo * | tr ' ' '\\n' | sort -R | head -1) -type d | fgrep -v /."}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and print the first 250 characters of each file.", "response": "find . -type f -print0 | xargs -0 printf '%.250s\\n'"}
{"prompt": "Give a bash command for the following description: Find a randomly chosen .jpg file in the current directory and search for it case-insensitively.", "response": "find $(ls -1 | grep .jpg | shuf -n 1) -iname \"*.jpg\""}
{"prompt": "Give a bash command for the following description: Find all files, folders, symlinks, etc matching pattern \"*.php\" in the current directory recursively", "response": "find . -name \\*.php"}
{"prompt": "Give a bash command for the following description: Find all files with size 0 and execute the command 'rm' (remove) on them.", "response": "find ~ -size 0 -exec rm {} \\;"}
{"prompt": "Give a bash command for the following description: Split the /etc/passwd file by the delimiter \":\", take the third field, and randomly sort the output.", "response": "cut -d: -f3${IFS}/etc/passwd | sort -R"}
{"prompt": "Give a bash command for the following description: Print unique lines of \"a\" and \"b\"", "response": "comm -3 a b"}
{"prompt": "Give a bash command for the following description: Find all files with the name ending in \".txt\" in the current directory and its subdirectories, and output the names of the files that contain the word \"Example\".", "response": "find . -maxdepth 2 -iname '*.txt' | xargs grep -li 'Example'"}
{"prompt": "Give a bash command for the following description: Remove each unique item listed on standard input and do nothing if empty", "response": "sort | uniq -u | xargs -r rm"}
{"prompt": "Give a bash command for the following description: find all the perl files in the current folder and search for a pattern", "response": "find . -name '*.pl' | xargs grep -L '^use strict'"}
{"prompt": "Give a bash command for the following description: Find all regular files under current directory tree without descending into './dir1' (except './dir1/subdir1*' pattern) and './dir2' directories", "response": "find . \\( -path './dir1/*' -and -not -path './dir1/subdir1*' -or -path './dir2' \\) -prune -or -type f -print"}
{"prompt": "Give a bash command for the following description: Print the first field (delimited by \":\") of the random data from the /dev/urandom device as a cat command.", "response": "cat <(cut -d \":\" -f 1 /dev/urandom)"}
{"prompt": "Give a bash command for the following description: Take the first 20 characters of a random string of length 4092 generated from /dev/urandom, containing only characters from a-z, A-Z, 0-9, and the special characters !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~.", "response": " head -c4092 /dev/urandom | tr -dc 'a-zA-Z0-9!\"#$%&'\\''()*+,-./:;<=>?@[\\]^_`{|}~' | fold -w20 | head -n1"}
{"prompt": "Give a bash command for the following description: display all the files in the home folder which belong to the suer \"bruno\" and end with \".sxw\" and have been accessed in the last 3*24 hours", "response": "find /home -type f -name *.sxw -atime -3 -user bruno"}
{"prompt": "Give a bash command for the following description: Retrieve the contents of the website https://randompage.com and sort the output randomly.", "response": "$ curl -sCi https://randompage.com | sort -R"}
{"prompt": "Give a bash command for the following description: Find all the files that were modified exactly one day ago", "response": "find . -mtime 1"}
{"prompt": "Give a bash command for the following description: Print a random string of characters (A-Z, a-z, 0-9) with a length of 32 characters (or a length specified by the user).", "response": "echo $(cat /dev/urandom | tr -dc A-Za-z0-9 | head -c ${1:-32})"}
{"prompt": "Give a bash command for the following description: Search for 'sometext' in all the files with '.txt' extension under current directory tree and also print the filenames", "response": "find . -name '*.txt' -exec grep 'sometext' '{}' \\; -print"}
{"prompt": "Give a bash command for the following description: Find all files with the name ending in \".txt\" in the current directory and its subdirectories up to 3 levels deep, then take the first randomly selected number between 1 and 100 from the list of files and list the file name.", "response": "find . -maxdepth 3 -iname '*.txt' | head -n $(shuf -i 1-100 -n 1) | xargs -I % ls %"}
{"prompt": "Give a bash command for the following description: echo the character at a random position in the string A", "response": "echo ${A:$(($RANDOM % ${#A}))}"}
{"prompt": "Give a bash command for the following description: Download a random number between 100 and 200 and save it as TempFile.out", "response": "shuf -i 100-200 -n 1 | xargs wget $$ -O TempFile.out"}
{"prompt": "Give a bash command for the following description: find all files in the current directory excluding those that end with .js or have the words .min or console in their name", "response": "find . -type f \\( -name \"*.js\" ! -name \"*-min*\" ! -name \"*console*\" \\)"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory (and its subdirectories) and move them to the directory called \"new_directory\" in the home directory.", "response": "find . -iname \"*\" | xargs mv -t ~/new_directory"}
{"prompt": "Give a bash command for the following description: Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print the parent directory names", "response": "find \"$STORAGEFOLDER\" -name .todo  -exec dirname {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .html and search for the pattern 'script (.*?) (src|href)=\"([^\"]+)\"' in them, recursively, and highlight the matches.", "response": "find -name \"*.html\" | xargs grep -P 'script\\s+(.*?)\\W(src|href)=\"([^\"]+)\"' -r --color=always"}
{"prompt": "Give a bash command for the following description: Display the contents of a randomly selected .jpg file in the current directory.", "response": "cat $(find . -name '*.jpg' | sort -R | head -n1)"}
{"prompt": "Give a bash command for the following description: Randomly select one word from the dictionary and print only the letters of the word.", "response": "shuf -n 1 /usr/share/dict/words | grep -oE '^[a-zA-Z]+'"}
{"prompt": "Give a bash command for the following description: Find all files/directories under current directory tree that belong to user 'john'", "response": "find . -user john"}
{"prompt": "Give a bash command for the following description: Find the third field (delimited by a colon) in the file /etc/group, randomly sort the output, and display the first line.", "response": "cut -d: -f3 /etc/group | sort -R | head -n1"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories, and change the permissions to 755 for each file.", "response": "find . -name \"*\" | xargs -I {} chmod 755 {}"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories, and delete them with the force option (-f) and verbose output (-v).", "response": "find . -name \"*\" -exec rm -fv {} \\;"}
{"prompt": "Give a bash command for the following description: Extract the file with a random 8 character name ending in .tar.gz from /dev/urandom.", "response": "tar -xf $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1).tar.gz"}
{"prompt": "Give a bash command for the following description: display all instances of the .profile file in the entire file system", "response": "find / -name .profile -print"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the /dev/urandom file, keep only alphanumeric characters, and output the first 32 characters.", "response": "sort -R /dev/urandom | tr -cd '[:alnum:]' | head -c 32"}
{"prompt": "Give a bash command for the following description: display all regular files in current folder excluding search in the directories that are ending with \"git,svn\"", "response": "find . \\( -type d -regex '^.*/\\.\\(git\\|svn\\)$' -prune -false \\) -o -type f -print0"}
{"prompt": "Give a bash command for the following description: Find all files in the root directory and give the user execute permission on them.", "response": "find / -type f -exec chmod u+x {} \\;"}
{"prompt": "Give a bash command for the following description: display all the files in the current folder which end with \".bash\"", "response": "find . -name \"*.bash\""}
{"prompt": "Give a bash command for the following description: Find all files of type 'f' in the '/var/sbin' directory and execute the command 'chmod a+rwx' on each of them.", "response": "find /var/sbin -type f -exec chmod a+rwx {} \\;"}
{"prompt": "Give a bash command for the following description: Find a file with the name ending in \".txt\" that has a random 16 character name generated from the /dev/urandom file.", "response": "find `cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1` -iname '*.txt'"}
{"prompt": "Give a bash command for the following description: Update the archive '2009.tar' with the files from the data/ directory tree that match pattern 'filepattern-*2009*'", "response": "find data/ -name filepattern-*2009* -print0 | xargs -0 tar uf 2009.tar"}
{"prompt": "Give a bash command for the following description: Save the user name of the current user to variable \"x\"", "response": "x=$(whoami)"}
{"prompt": "Give a bash command for the following description: Delete empty lines from standard input", "response": "sed -n \"s/^$//;t;p;\""}
{"prompt": "Give a bash command for the following description: Save the short host name appended with \".mysqldb\" in variable \"DBPREFIX\"", "response": "DBPREFIX=\"$(hostname -s).mysqldb\""}
{"prompt": "Give a bash command for the following description: Find all hidden files", "response": "find /tmp -type f -name \".*\""}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories and change the permissions to read and write for the owner only.", "response": "find ~ -type f | xargs chmod 600"}
{"prompt": "Give a bash command for the following description: Create a directory with a randomly generated name (10 characters by default) in the current directory and all its subdirectories, for all files with any extension.", "response": "mkdir -p $(find . -iname \"*$(cat /dev/urandom | tr -dc '[[:alnum:]]' | head -c ${1:-10}).*\")"}
{"prompt": "Give a bash command for the following description: Change permissions to u=rwx,g=rx,o= for all directories inside the current directory tree", "response": "find . -type d -exec chmod u=rwx,g=rx,o= '{}' \\;"}
{"prompt": "Give a bash command for the following description: Remove all *.swp files under current directory ensuring white space safety", "response": "find . -name \"*.swp\" -print0|xargs -0 rm"}
{"prompt": "Give a bash command for the following description: Find all files/directories with '.in' extension in the directory $directory and its subdirectories", "response": "du -a $directory | awk '{print $2}' | grep '\\.in$'"}
{"prompt": "Give a bash command for the following description: Cut the file $FILE using the delimiter \",\" and select the field which is randomly chosen from the number of fields in the first line of the file.", "response": "cut -d , -f $(shuf -i1-$(head -n 1 $FILE | tr ' ' '\\n' | wc -l) -n 1) $FILE"}
{"prompt": "Give a bash command for the following description: This command will generate a random number between 0 and 100, and then print out any number that is divisible by 4.", "response": "awk 'BEGIN{srand();print int(rand()*100)}' | grep [2468][02468]"}
{"prompt": "Give a bash command for the following description: Find all files in the root directory, excluding empty files, sort them, and add execute permission for the user.", "response": "find / -name '*.*' | grep -v -E '^$' | sort | xargs chmod u+x"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" and search for the word \"word\" in them, displaying the line number and filename of each occurrence.", "response": "find . -name '*.txt' | xargs grep -nH \"word\""}
{"prompt": "Give a bash command for the following description: Find all files with the extension .jpg in the current directory and move them to the destination folder.", "response": "find ./ -type f -name \"*.jpg\" -exec mv -i '{}' /dest_folder/ \\;"}
{"prompt": "Give a bash command for the following description: display the contents of all the files in the current folder which start with test ( case insensitive search )", "response": "find . -iname '*test*' -exec cat {} \\;"}
{"prompt": "Give a bash command for the following description: display a long listing of all the files in the current folder which are bigger than 10KB", "response": "find . -size +10k -exec ls -lh {} \\+"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the file located at /path/to/file.txt.", "response": "sort --random-sort /path/to/file.txt"}
{"prompt": "Give a bash command for the following description: Search through all the files in the /usr/bin directory and print out any lines that contain the current minute (in two-digit format) as indicated by the date command.", "response": "shuf --echo /usr/bin/* | xargs grep -i '$(date +%M)'"}
{"prompt": "Give a bash command for the following description: Search the entire file system for files with a name starting with \".bash\" and compress them using gzip.", "response": "find / -name \".bash*\" -exec gzip {} \\;"}
{"prompt": "Give a bash command for the following description: Split \"database.sql\" into files of at most 100000 lines each with prefix \"database-\"", "response": "split -l 100000 database.sql database-"}
{"prompt": "Give a bash command for the following description: Find '.java' files with checksum 0bee89b07a248e27c83fc3d5951213c1 in the current directory", "response": "md5sum *.java | grep 0bee89b07a248e27c83fc3d5951213c1"}
{"prompt": "Give a bash command for the following description: FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines", "response": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'"}
{"prompt": "Give a bash command for the following description: Find all files and directories in the root directory, then remove all entries in the /etc/passwd file from the list.", "response": "comm -23 <(sort -u <(cat <(find / -type f) <(find / -type d))) <(sort -u <(cat /etc/passwd))"}
{"prompt": "Give a bash command for the following description: Find all files with the extensions .txt or .md in the first 4 levels of the directory tree and change the permissions to 750 for all of them.", "response": "find / -ignore_readdir_race -maxdepth 4 -name \"*.txt\" -or -name \"*.md\" -and -exec chmod -R 750 {} \\;"}
{"prompt": "Give a bash command for the following description: Randomly select a number between 1 and 100 and rename it to \"file.txt\":\nshuf -i 1-100 -n 1 | xargs -I{} mv {} file.txt", "response": "shuf -i 1-100 -n 1 | xargs -I{} echo mv {} file.txt"}
{"prompt": "Give a bash command for the following description: Take the output of the 'env' command, remove all non-alphanumeric characters and replace them with newlines, sort the output randomly, take the first line, and use it as an argument to move the file to the home directory.", "response": "env | tr -sc \"[:alnum:] \" \"\\n\" | sort -R | head -n 1 | xargs -I {} mv {} ~/"}
{"prompt": "Give a bash command for the following description: find all posix-extended regex  \"[a-f0-9\\-]\\{36\\}\\.jpg\" files", "response": "find . -regextype posix-extended -regex \"[a-f0-9\\-]\\{36\\}\\.jpg\""}
{"prompt": "Give a bash command for the following description: Delete files containing whitespaces", "response": "find . -name \"* *\" -exec rm -f {} \\;"}
{"prompt": "Give a bash command for the following description: Find a random mp3 file in the home directory (or any of its subdirectories up to 3 levels deep) and output the path to it.", "response": "cat <(find ~/ -name *.mp3 -maxdepth 3) | sort -R | head -n 1"}
{"prompt": "Give a bash command for the following description: Find all files with the name ending in \".txt\" in the current month and year and copy them to the \"/home/documents\" directory.", "response": "find $(date \"+%m_%Y\") -name '*.txt' -exec cp {} /home/documents \\;"}
{"prompt": "Give a bash command for the following description: For all numbers from 2 to 1000, generate a random number between the current number and the previous number, then use that number to rename the file from .txt to .pdf.", "response": "seq 2 1000 | awk 'BEGIN{srand()}{print rand() * ($1 - $0) + $0}' | xargs -I{} echo mv {}.txt {}.pdf"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the current directory, randomly select one of them, and copy it to the Documents folder in the home directory, displaying the progress of the copy operation.", "response": "find . -iname \"*.txt\" | shuf -n 1 | xargs -t -I {} cp -vi {} ~/Documents"}
{"prompt": "Give a bash command for the following description: Find all files (type f) with any name (name '*.*') and execute the command chmod 644 on each of them (+).", "response": "find -type f -name '*.*' -exec chmod 644 {} \\+"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory (maxdepth 1) and move them to the directory called \"dest\".", "response": "find . -maxdepth 1 -type f -exec mv {} ./dest \\;"}
{"prompt": "Give a bash command for the following description: Find a randomly selected executable file with any extension and print its name.", "response": "find . -executable -type f -name '*.*' -printf '%f\\n' | sort -R | head -n 1"}
{"prompt": "Give a bash command for the following description: Take the third field delimited by a pipe from the /etc/passwd file, reverse it, convert it to uppercase, and sort it randomly.", "response": "cut -f3 -d'|' /etc/passwd | rev | awk '{print toupper($0)}' | sort -R"}
{"prompt": "Give a bash command for the following description: echo a random number between 0 and 9", "response": "echo $(awk -v min=0 -v max=9 'BEGIN{srand(); print int(min+rand()*(max-min+1))}')"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .txt in the current directory and its subdirectories, and replace all strings of two or more uppercase letters with the string FOO.", "response": "find ./ -name \"*.txt\" | xargs sed -i 's/[A-Z]\\{2,\\}/FOO/g'"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".jpg\" in the directory \"/usr/local/lib\" that have been modified within the last 90 minutes and have been changed within the last 30 minutes, and copy them to the Desktop.", "response": "find /usr/local/lib -mmin -90 -cmin +30 -name \"*.jpg\" -exec cp {} ~/Desktop \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".js\" in the current directory and up to 4 levels of subdirectories, delete them, and then remove all blank lines from the remaining files.", "response": "find / -maxdepth 4 -name \"*.js\" -exec rm -f {} \\; | xargs sed -i -e '/^$/d'"}
{"prompt": "Give a bash command for the following description: find all the text files in the current folder and display the results pagewise", "response": "find . -name \"*.txt\" -print | less"}
{"prompt": "Give a bash command for the following description: Search for any alphanumeric character in a randomly shuffled list of files in the home directory.", "response": "grep -qI '[A-Za-z0-9]' <(shuf -e $(find ~/ -maxdepth 1))"}
{"prompt": "Give a bash command for the following description: display all files in current folder excluding those that have the word \"git\" in their name and display files that have git in their path names", "response": "find . ! -name '*git*' | grep git"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".php\" and move them to the directory \"~/dev/production\".", "response": "find . -name \"*.php\" | xargs mv -t ~/dev/production"}
{"prompt": "Give a bash command for the following description: echo a random number between 0 and 32767;", "response": "awk 'BEGIN{srand();print int(rand()*32767)}' | xargs printf 'echo {};'"}
{"prompt": "Give a bash command for the following description: Display all lines containing PROBES in the current kernel's compile-time config file.", "response": "grep PROBES /boot/config-$(uname -r)"}
{"prompt": "Give a bash command for the following description: Find all files in the directory tree starting from the root directory (/) with a minimum depth of 2 levels and a maximum depth of 4 levels and change their permissions to 644.", "response": "find / -mindepth 2 -maxdepth 4 -type f -exec chmod 644 {} \\;"}
{"prompt": "Give a bash command for the following description: Remove the regular files from the current directory tree that were last modified on November, 21", "response": "find -type f -newermt \"Nov 21\" ! -newermt \"Nov 22\" -delete"}
{"prompt": "Give a bash command for the following description: Find a random file in the current directory and print its path.", "response": "find . -printf '%h %p\\n' | sort -R | head -n 1"}
{"prompt": "Give a bash command for the following description: Archive \"/var/www/test/\" to \"/var/www/test\" on host \"231.210.24.48\" as user \"ubuntu\" via ssh using identity file \"/home/test/pkey_new.pem\"", "response": "rsync -rave \"ssh -i /home/test/pkey_new.pem\" /var/www/test/ ubuntu@231.210.24.48:/var/www/test"}
{"prompt": "Give a bash command for the following description: cat \"$(ls | sed -n \"$(awk -v min=1 -v max=$(ls | wc -l) 'BEGIN{srand(); print int(min+rand()*(max-min+1))}')p\")\"", "response": "cat $(awk -v min=1 -v max=$(ls | wc -l) 'BEGIN{srand(); print int(min+rand()*(max-min+1))}' | sed -n 's/\\(.*\\)/\"\\1\"/p')"}
{"prompt": "Give a bash command for the following description: Unzip and extract \"userAgent=[^=]*'\" from \"input.gz\"", "response": "zcat input.gz | grep -o 'userAgent=[^=]*' | sed 's/ [^ ]*$//'"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" and delete them.", "response": "find . -iname '*.txt' | xargs rm -f"}
{"prompt": "Give a bash command for the following description: delete all empty files in the current directory ( empty file = size 0 bytes )", "response": "find . -empty -exec rm '{}' \\;"}
{"prompt": "Give a bash command for the following description: Download the file \"Gentoo Linux SuSE Logo.svg\" from the Wikimedia Commons website using the curl command.", "response": "curl -O https://upload.wikimedia.org/wikipedia/commons/f/f5/Gentoo_Linux_SuSE_Logo.svg"}
{"prompt": "Give a bash command for the following description: echo ${RANDOM} | tr '-' '/'", "response": "echo ${RANDOM} | tr '/' '-'"}
{"prompt": "Give a bash command for the following description: This command will generate a random number between 0 and 1.", "response": "awk -F: 'BEGIN {srand(); print rand()}'"}
{"prompt": "Give a bash command for the following description: Find all files with permission 400 and execute the command 'touch' on each of them.", "response": "find / -perm 400 -exec touch {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .jpg, and for each of them, execute the command \"chmod u+x\" on them.", "response": "find . -iname '*.jpg' -exec chmod \"u\\+x\" '{}' \\;"}
{"prompt": "Give a bash command for the following description: Read a single character from standard input into variable \"ans\"", "response": "read -n1 ans"}
{"prompt": "Give a bash command for the following description: Find all the files whose name is FindCommandExamples.txt in the current working directory", "response": "find /root -name FindCommandExamples.txt"}
{"prompt": "Give a bash command for the following description: Search the current directory tree for *bash* files printing them on a single line", "response": "find . -name \"*bash*\" | xargs"}
{"prompt": "Give a bash command for the following description: Find all files with any name and extension, and execute the command to add executable permission to them.", "response": "find . -name '*.*' -exec chmod +x {} \\;"}
{"prompt": "Give a bash command for the following description: Find all directories in the root directory and delete them recursively.", "response": "find / -type d -exec rm -rf {} \\;"}
{"prompt": "Give a bash command for the following description: echo $(shuf -n 1 $(ls --ignore=*.*))", "response": "echo $(echo $(echo '$(shuf -n 1 $(ls --ignore=*.*))'))"}
{"prompt": "Give a bash command for the following description: find all the files in the entire file system that have been accessed exactly  50 days ago", "response": "find / -atime 50"}
{"prompt": "Give a bash command for the following description: create directory subdirectory", "response": "mkdir subdirectory"}
{"prompt": "Give a bash command for the following description: Replace all five-character hexadecimal strings with a random number.", "response": "sed -i -e 's/\\b[0-9a-f]\\{5\\}\\b/$RANDOM/g'"}
{"prompt": "Give a bash command for the following description: Print the current directory tree with file permissions", "response": "tree -p"}
{"prompt": "Give a bash command for the following description: Prints week day of a 31 day in a current month.", "response": "cal | awk -v date=31 'NR == 2 { split($0, header) } NR > 2 { for (i = 1; i <= NF; ++i) if ($i == date) { print header[NR == 3 ? i + 7 - NF : i]; exit } }'"}
{"prompt": "Give a bash command for the following description: Find all files (type f) in the current directory and up to 4 levels of subdirectories (maxdepth 4) that are owned by the group root and change the permissions to 777 for each of them.", "response": "find ~ -maxdepth 4 -type f -group root | xargs -I % chmod 777 %"}
{"prompt": "Give a bash command for the following description: Find a single randomly chosen file with a \".sh\" extension in the current directory and print its name.", "response": "find . -name \"*.sh\" | awk '{printf \"%d %s\\n\", NR, $0}' | shuf -n 1 | cut -d \" \" -f2"}
{"prompt": "Give a bash command for the following description: Find all files in the /etc/ directory and its subdirectories that have been modified within a random number of minutes, and compress them using the highest compression level.", "response": "find -L /etc/* -mmin -$RANDOM | xargs gzip -9"}
{"prompt": "Give a bash command for the following description: echo the value of the $#th argument or a random number if $# is 0", "response": "echo ${RANDOM:-$[RANDOM%$#]};"}
{"prompt": "Give a bash command for the following description: Create intermediate directories \"b and \"c\" as required and directory \"c\"", "response": "mkdir -p a/b/c"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the /dev/urandom file and output the first line without a new line character.", "response": "sort -R /dev/urandom | head -n1 | tr -d \\\\n"}
{"prompt": "Give a bash command for the following description: Print mount point of the file system containing $path.", "response": "df \"$path\" | tail -1 | awk '{ print $6 }'"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories, and replace all occurrences of \"foo\" with \"bar\" in each file.", "response": "find . -name '*' | xargs sed -i -e \"s/foo/bar/g\""}
{"prompt": "Give a bash command for the following description: change owner and group of the file script.sh to user root", "response": "chown root:root script.sh"}
{"prompt": "Give a bash command for the following description: Extract the first randomly sorted tar.gz file in the current directory.", "response": "tar -xzf $(ls -q | grep .tar.gz$ | sort -R | head -n 1)"}
{"prompt": "Give a bash command for the following description: Display the size of the first randomly selected file in the current directory.", "response": "du -ha $(ls -1 | shuf | head -1)"}
{"prompt": "Give a bash command for the following description: execute command \"who\" when key \"\\eW\" is pressed", "response": "bind -x '\"\\eW\":\"who\"'"}
{"prompt": "Give a bash command for the following description: Randomly select one file from the current directory and display its name.", "response": "shuf -n 1 -e $( ls -1 )"}
{"prompt": "Give a bash command for the following description: Find all files in the /etc/ directory and set their permissions to 600.", "response": "`find /etc/ -type f -exec chmod 600 {} \\;`"}
{"prompt": "Give a bash command for the following description: Find all *.foo files under current directory and print their contents", "response": "cat `find . -name '*.foo' -print`"}
{"prompt": "Give a bash command for the following description: This command will print a random number between 0 and 10.", "response": "awk -F' ' 'BEGIN {srand(); print int(rand()*10)}'"}
{"prompt": "Give a bash command for the following description: Find the most recently modified file in the /tmp directory and print its modification time and path.", "response": "find /tmp -printf '%T@ %p\\n' | sort -r | head -n 1"}
{"prompt": "Give a bash command for the following description: Delete files with inode number 782263 under current directory", "response": "find . -inum 782263 -exec rm -i {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory (max depth of 1), and execute the command to move them to a temporary directory.", "response": "find . -maxdepth 1 -type f -exec mv {} $(mktemp) \\;"}
{"prompt": "Give a bash command for the following description: Make directory \"aaa\"", "response": "mkdir aaa"}
{"prompt": "Give a bash command for the following description: Find a randomly chosen word from the words in the file /usr/share/dict/words and search for files with the extension .txt with that word in the name.", "response": "find $(echo $(grep -oE '[a-zA-Z0-9]+' /usr/share/dict/words | shuf -n 1)) -name \"*\\.txt\""}
{"prompt": "Give a bash command for the following description: Find a file in the current directory and its subdirectories up to a maximum depth of 3, randomly sort the results, and display the first result.", "response": "find / -maxdepth 3 -type f -name \"*\" | sort -R | head -1"}
{"prompt": "Give a bash command for the following description: List all files and directories in the Documents directory, print the 10th column (filename) and remove newline characters.", "response": "ls -avRlh ~/Documents | awk '{print $10}' | tr -d '\\n'"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the directory created by the command \"mktemp -p . -u --tmpdir FsXXXXXX\".", "response": "find $(dirname $(mktemp -p . -u --tmpdir FsXXXXXX)) -name '*.txt'"}
{"prompt": "Give a bash command for the following description: Find all files in the /var/logs directory that have been modified more than 7 days ago and execute the command \"echo\" on each of them.", "response": "find /var/logs -type f -mtime +7 -exec echo {} \\;"}
{"prompt": "Give a bash command for the following description: Find the first randomly sorted file with a .txt extension in the current directory.", "response": "find . -name \"*.txt\" | xargs basename | sort -R | head -1"}
{"prompt": "Give a bash command for the following description: Find all files in the root directory and execute the sed command on each of them.", "response": "find / -name '*' -exec sed -i {} \\;"}
{"prompt": "Give a bash command for the following description: Find the current working directory and list all files with the extension \".conf\" in any case, and write the output to a file called \"/tmp/temp.log\".", "response": "find `pwd` -iname \"*.conf\" | tee /tmp/temp.log"}
{"prompt": "Give a bash command for the following description: Find files named \"needle\" ignoring the case", "response": "find . -iname \"needle\""}
{"prompt": "Give a bash command for the following description: Calculate the size in bytes of the file chosen randomly from the list of files.", "response": "du -sb $(ls -1 | sort -R | head -1)"}
{"prompt": "Give a bash command for the following description: Print lines containing string TEXT from all log files in the current directory.", "response": "grep -e TEXT *.log | cut -d':' --complement -s -f1"}
{"prompt": "Give a bash command for the following description: Find any file in the current directory that contains any letter or number, randomly select one of those files, and move it to the tmp directory.", "response": "find ./ -regex '.*[A-Za-z0-9]' | shuf -n 1 | xargs -I '{}' mv '{}' ./tmp/"}
{"prompt": "Give a bash command for the following description: Find any file in the current directory and its subdirectories, sort the results randomly, and display the first one.", "response": "find ~ -iname \"*.*\" | sort -R | head -n1"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories, and replace all numbers with the name \"Michael\" using xargs and sed.", "response": "find ./ -name * | xargs sed 's/[0-9]\\+/Michael/g'"}
{"prompt": "Give a bash command for the following description: Find the total size of all directories in the parent directory of the directory containing the Bash executable, and display the result in a human-readable format.", "response": "find $(dirname $(dirname $(readlink -f $(which bash)))) -type d | xargs du -chs"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .html in the current directory and its subdirectories, and replace the word \"example\" with \"test\" in each of them.", "response": "find ~ -type f -name '*.html' -exec sed -i -e 's/example/test/g' {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files named \".DS_Store\" in the current directory and its subdirectories, then delete them forcefully.", "response": "find ~ -name \".DS_Store\" -type f -exec rm -fv {} \\;"}
{"prompt": "Give a bash command for the following description: Get files that last had their meta information changed more than 3 days ago", "response": "find / -ctime +3"}
{"prompt": "Give a bash command for the following description: Find all files in the current working directory with the extension \".txt\" and delete them.", "response": "`find $(pwd) -name '*.txt' -delete`"}
{"prompt": "Give a bash command for the following description: display long listing of all the regular hidden files in the folder Musica", "response": "find Música/* -type f -name \".*\" -exec ls -l {} \\;"}
{"prompt": "Give a bash command for the following description: Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.", "response": "find -type f -name \"STATUS.txt\" -exec grep -q \"OPEN\" {} \\; -exec dirname {} \\;"}
{"prompt": "Give a bash command for the following description: Search the entire file system for files with the extension \".txt\" and replace all occurrences of \"foo\" with \"bar\" in each of those files.", "response": "find / -name '*.txt' -exec sed -i 's/foo/bar/g' {} +;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" and print the total size of all of them in bytes.", "response": "find . -name \"*.txt\" | xargs printf 'Total Size: %d bytes\\n' $(wc -c | tail -1)"}
{"prompt": "Give a bash command for the following description: Recursively prints all files in a current folders, and searches \"stringYouWannaFind\" in file content ignoring case differences, and preceding found string with its number in file.", "response": "find ./ -type f -print -exec grep -n -i \"stringYouWannaFind\" {} \\;"}
{"prompt": "Give a bash command for the following description: Find the largest file in the current directory and its subdirectories, and print its name.", "response": "find ~ -type f -exec du -chL {} + | sort -rh | awk '{print $2}' | head -n 1"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .txt in the directory /path/to/dir and for each file, cut the extension off and rename the file with the suffix \"_backup\" appended.", "response": "find /path/to/dir -name \"*.txt\" | cut -d '.' -f1 | xargs -I {} mv \"{}\" \"{}_backup\""}
{"prompt": "Give a bash command for the following description: Search the entire file system for any file name and execute a command to replace all occurrences of \"foo\" with \"bar\" in each file.", "response": "find / -name \"*\" -exec sed -i 's/foo/bar/g' {} \\;"}
{"prompt": "Give a bash command for the following description: find files which full path name like '*/*config' at current directory and print", "response": "find .  -path '*/*config'"}
{"prompt": "Give a bash command for the following description: V%#@<_^]_3[^", "response": "echo $(cat /dev/urandom | tr -dc 'A-Za-z0-9!\"#$%&'\\''()*+,-./:;<=>?@[\\]^_`{|}~' | fold -w 16 | head -n 1)"}
{"prompt": "Give a bash command for the following description: display all the C, CPP, Header files in the kat folder", "response": "find kat -type f \\( -name \"*.c\" -o -name \"*.cpp\" -o -name \"*.h\" \\)"}
{"prompt": "Give a bash command for the following description: Find files in the current directory tree whose content was changed within the last 60 minutes", "response": "find . -mmin -60"}
{"prompt": "Give a bash command for the following description: Move the file downloaded from \"http://example.com/file\" to the user's home directory and rename it to \"new_file\".", "response": "mv <(curl -O \"http://example.com/file\") ~/new_file"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory, calculate the MD5 checksum for each file, cut the checksum from the output, sort the checksums, count the number of occurrences of each checksum, and print the checksums that occur more than once.", "response": "find . -type f -exec md5sum {} + | cut -d \" \" -f 1 | sort | uniq -c | grep -v 1"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the current directory and its subdirectories, list them in long format, sort them by the fifth column (file size) in numerical order, and display the last line.", "response": "`find . -iname '*.txt' -exec ls -l {} \\; | sort -k 5 -n | tail -1`"}
{"prompt": "Give a bash command for the following description: Randomly select one number from the range of 1 to 50.", "response": "\"shuf -n1 -e $(echo {1..50})\""}
{"prompt": "Give a bash command for the following description: The command will output a random number between 1 and 100, followed by the phrase \"The number is:\".", "response": "shuf -i 1-100 -n 1 | xargs echo \"The number is:\""}
{"prompt": "Give a bash command for the following description: Search the entire file system for files with the extension \".conf\" and execute the command \"sed -i 's/foo/bar/g' {}\" on each of them.", "response": "find / -name \"*.conf\" -exec sed -i 's/foo/bar/g' {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the current directory, excluding hidden files, and count the number of characters in each file.", "response": "find . -name \"*.txt\" | grep -v \"^\\.\" | xargs wc -c"}
{"prompt": "Give a bash command for the following description: Print 1 to 10 by separating them with colon (':')", "response": "echo {1..9}: 10 | tr -d ' '"}
{"prompt": "Give a bash command for the following description: The first randomly sorted file or directory in the current directory and all its subdirectories.", "response": "echo \"$(ls -R|sort -R|head -n1)\""}
{"prompt": "Give a bash command for the following description: Randomly shuffle the list of all files with the .txt extension in the current directory and make them executable.", "response": "shuf -e $(find . -name '*.txt' -exec chmod +x {} \\;)"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".sh\" in the home directory and its subdirectories and set the permissions to 0600 for all of them.", "response": "`find ~ -name \"*.sh\" -exec chmod -R 0600 {} \\;`"}
{"prompt": "Give a bash command for the following description: V6X3K6XQV6KV6KVF", "response": "echo \"$(cat /dev/urandom| tr -dc [:alnum:] | head -c16)\""}
{"prompt": "Give a bash command for the following description: Save the absolute path of \"$path\" to variable \"fullpath\"", "response": "fullpath=`readlink -f \"$path\"`"}
{"prompt": "Give a bash command for the following description: Find all files (type f) up to 5 levels deep (maxdepth 5) that are not mp4 or m4v files ( ! -name \"*.mp4\" -or ! -name \"*.m4v\" ), print them (print0) in a random order (sort -Rz) and print the first 12 characters of each file (xargs -0 awk '{ print substr($0, 0, 12) }').", "response": "find . -maxdepth 5 -type f -and \\( ! -name \"*.mp4\" -or ! -name \"*.m4v\" \\) -print0 | sort -Rz | xargs -0 awk '{ print substr($0, 0, 12) }'"}
{"prompt": "Give a bash command for the following description: Display the last 100 lines of a randomly selected file in the home directory.", "response": "tail -n 100 $(find ~ -iname '*' | sort -R | head -n 1)"}
{"prompt": "Give a bash command for the following description: Copy file-a.txt to file-b-{random number between 1000 and 9999}.txt", "response": "shuf -i 1000-9999 -n 1 | xargs -I {} cp ./file-a.txt ./file-b-{}.txt"}
{"prompt": "Give a bash command for the following description: Find *2011* files and grep for the string 'From: Ralph' in those files", "response": "find . -name '*2011*' -print | xargs -n2 grep 'From: Ralph'"}
{"prompt": "Give a bash command for the following description: find all the directories in the folder $LOGDIR which have been modified in the last 5 days and delete them.", "response": "find $LOGDIR -type d -mtime +5 -exec rm -f {} \\;"}
{"prompt": "Give a bash command for the following description: Extracts a bz2 file.", "response": "bunzip2 file.bz2"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories that were modified more than the current minute and delete them.", "response": "find ~ -type f -mmin +$(date +%M) -delete"}
{"prompt": "Give a bash command for the following description: Take the first and third fields from /dev/urandom, convert them to only uppercase and lowercase letters and numbers, fold them into 16 characters each, and take the first 10 lines.", "response": "cat <(cut -f 1,3 /dev/urandom | tr -dc 'A-Za-z0-9' | fold -w 16 | head -n 10)"}
{"prompt": "Give a bash command for the following description: find all files in current folder which are bigger than 1MB", "response": "find ./ -size +1000k"}
{"prompt": "Give a bash command for the following description: Find a single file of any type and execute a random selection of it.", "response": "find . -type f -exec shuf -n 1 -e {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".pdf\" in the entire file system, calculate their MD5 checksums, sort the results randomly, and display the first one.", "response": "find / -type f -iname '*.pdf' | xargs md5sum | sort -R | head -n 1"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories, and replace any 20-character strings with a randomly generated 16-character string using OpenSSL.", "response": "find ~ -type f -exec sed -i '' 's/[A-Za-z0-9]\\{20\\}/`openssl rand -base64 16`/g' {} \\;"}
{"prompt": "Give a bash command for the following description: Find a file of any type whose name is composed of 32 random alphanumeric characters.", "response": "find $(cat /dev/urandom | tr -dc 'A-Za-z0-9' | head -c 32) -type f"}
{"prompt": "Give a bash command for the following description: Calculate the result of the command 'echo $(shuf -i 0-1000 -n 1)'", "response": "cal `echo $(shuf -i 0-1000 -n 1)`"}
{"prompt": "Give a bash command for the following description: Find all files in the home directory, list their details, and print the total size of all the files.", "response": "find ~/ -type f -ls | awk '{total += $5} END {print total}'"}
{"prompt": "Give a bash command for the following description: Search the entire file system for files with the extension \".txt\" and replace all occurrences of the word \"Life\" with the word \"Makefile\" in those files.", "response": "find / -name \"*.txt\" | xargs sed -i \"s/Life/Makefile/g\""}
{"prompt": "Give a bash command for the following description: AABBCCDDEE", "response": "echo $(echo {A,B,C,D,E,F}{A,B,C,D,E,F}{A,B,C,D,E,F}{A,B,C,D,E,F} | tr -dc '[:alpha:]' | fold -w 10 | head -n 1)"}
{"prompt": "Give a bash command for the following description: Find a random environment variable, then find all files in the current directory (max depth of 1) and make them executable.", "response": "find $(env |sort -R|head -1|cut -f1 -d=) -maxdepth 1 -type f -exec chmod +x {} \\;"}
{"prompt": "Give a bash command for the following description: Print the sorted and unique parent directory paths appended with : of all the files that are executable by owner under ~/code directory without descending into hidden directories", "response": "find ~/code -name '.*' -prune -o -type f -a -perm /u+x -printf ':%h\\n' | sort | uniq | tr -d '\\n'"}
{"prompt": "Give a bash command for the following description: Search for 'Text To Find' in all regular files under current directory tree and show the matched files", "response": "find ./ -type f -exec grep -l \"Text To Find\" {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with a size of 0 bytes and a name ending in \".tmp\" in the current directory and its subdirectories, and delete them.", "response": "find ~ -size 0b -iname '*.tmp' | xargs -I d rm -f d"}
{"prompt": "Give a bash command for the following description: Search the CSS files found in the current directory tree for string \"foo\"", "response": "find . -name \\*.css -print0 | xargs -0 grep -nH foo"}
{"prompt": "Give a bash command for the following description: Make directory \"/var/svn\"", "response": "sudo mkdir /var/svn"}
{"prompt": "Give a bash command for the following description: Go to directory /some/where/long", "response": "cd /some/where/long"}
{"prompt": "Give a bash command for the following description: Find all files in the /var directory, regardless of case, and execute the command \"chmod 664\" on each of them.", "response": "find /var -type f -iname \"*.*\" -execdir chmod 664 {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files under current directory", "response": "find \"`pwd`\" -type f"}
{"prompt": "Give a bash command for the following description: search for the word LOG in all the files in the folder ~/jsmith", "response": "find ~jsmith -exec grep LOG '{}' /dev/null \\; -print"}
{"prompt": "Give a bash command for the following description: Replace all but the last word with nothing.", "response": "sed 's/[^ ]* *\\([^ ]*\\)/\\1/g'"}
{"prompt": "Give a bash command for the following description: Print a random integer between 0 and 9999.", "response": "awk 'BEGIN { print int(rand() * 10000) }'"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories, and change the permissions to 640 for each file.", "response": "find ~ -type f -exec chmod 640 {} \\;"}
{"prompt": "Give a bash command for the following description: Check if a drive with UUID \"$UUID\" is mounted", "response": "mount | grep $(readlink -f /dev/disk/by-uuid/$UUID )"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories, and search for the pattern 'pattern' in each file.", "response": "find . -type f -name \"*\" | xargs -n1 grep -i 'pattern'"}
{"prompt": "Give a bash command for the following description: Remove the directory located at /tmp/ followed by a randomly generated string of 32 alphanumeric characters.", "response": "rmdir /tmp/$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory (max depth of 1) and make them executable for all users.", "response": "find ./ -maxdepth 1 -type f -exec chmod a+x {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the current working directory and delete them.", "response": "find $(pwd)/* -iname '*.txt' | xargs rm -f"}
{"prompt": "Give a bash command for the following description: Print the name of the last file in a randomly sorted list of files.", "response": "echo $(ls | sort -R | tail -n 1)"}
{"prompt": "Give a bash command for the following description: Find the last randomly selected file with either a .csv or .xlsx extension in the current directory.", "response": "find ~ -name \"*.csv\" -or -name \"*.xlsx\" | awk '{print $1}' | shuf | tail -n1"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" and display the first 10 lines of each file.", "response": "find -name '*.txt' | xargs head -n 10"}
{"prompt": "Give a bash command for the following description: Find all files ending with \".txt\" in the current directory and its subdirectories, and replace all occurrences of \"old\" with \"new\" in each of those files.", "response": "find ~ -name \"*.txt\" -exec sed -i 's/old/new/g' {} \\;"}
{"prompt": "Give a bash command for the following description: Send a request to the website \"randomtextgenerator.com\" using the user agent \"Mozilla/5.0\" and print the first word of the response.", "response": "curl -A 'Mozilla/5.0' https://www.randomtextgenerator.com/ | awk '{print $1}'"}
{"prompt": "Give a bash command for the following description: Find all files in the home directory with a name ending in \".txt\" and count the number of lines in each file.", "response": "find ~/ -iname \"*.txt\" | xargs wc -l"}
{"prompt": "Give a bash command for the following description: The output of this command will be the contents of a randomly chosen file in the current directory.", "response": "cat $(find -name \"*\" | shuf -n 1)"}
{"prompt": "Give a bash command for the following description: V6Xy3Xy6Xy3Xy6Xy3Xy6Xy3Xy6Xy3", "response": "echo $(echo -e \"$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)\")"}
{"prompt": "Give a bash command for the following description: Lists all directories in a current folder.", "response": "ls -d */"}
{"prompt": "Give a bash command for the following description: Save system information appended with the current date in 'filename' variable", "response": "filename=\"$(uname -a)$(date)\""}
{"prompt": "Give a bash command for the following description: Find a file with the extension \".jpg\" in any directory, sort the results randomly, and display the first result.", "response": "find / -type f -name \"*.jpg\" | sort -R | head -1"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .txt in the current directory (and its subdirectories) on the date specified by the command date +%F and execute the command cat on each of them.", "response": "find $(date +%F) -maxdepth 1 -type f -name '*.txt' -exec cat {} \\;"}
{"prompt": "Give a bash command for the following description: Find all regular files in the current directory tree whose names end with \".DS_Store\" and delete them", "response": "find . -type f -name '*.DS_Store' -ls -delete"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .txt in the entire file system and print every 4th line starting from line 100 for each file.", "response": "find / -name '*.txt' -exec sed -n 100~4p '{}' \\;"}
{"prompt": "Give a bash command for the following description: find all executable files", "response": "find / -executable"}
{"prompt": "Give a bash command for the following description: Print a colon-separated list of all directories from the ~/code directory tree", "response": "find ~/code -type d | tr '\\n' ':' | sed 's/:$//'"}
{"prompt": "Give a bash command for the following description: Find all files with any extension and give them execute permission for all users.", "response": "find . -name \"*.*\" -exec chmod a+x {} \\;"}
{"prompt": "Give a bash command for the following description: display all the regular/normal files in current folder", "response": "find . -type f -name \\*"}
{"prompt": "Give a bash command for the following description: V6X3X3X3", "response": "echo $(head -c 8 /dev/urandom| od -DAn | tr -d ' \\n' | tr -dc 'A-Za-z0-9')"}
{"prompt": "Give a bash command for the following description: show all the files  in current directory", "response": "find ."}
{"prompt": "Give a bash command for the following description: Go to directory /cygdrive/c/Program Files (x86) using quotes to escape special characters", "response": "cd \"/cygdrive/c/Program Files (x86)\""}
{"prompt": "Give a bash command for the following description: Count the number of files in the current directory.", "response": "find . -name '*' | wc -l"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".pdf\" in the entire file system and delete them.", "response": "find / -name \"*.pdf\" -exec rm {} \\;"}
{"prompt": "Give a bash command for the following description: Print contents of \"file\" as space separated hexadecimal bytes on a single line", "response": "od -t x1 -An file |tr -d '\\n '"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".css\" and delete them.", "response": "find . -type f -name '*.css' -delete"}
{"prompt": "Give a bash command for the following description: Extract 8 bytes as an unsigned integer that is \"$o\" offset into \"$rpm\"", "response": "set `od -j $o -N 8 -t u1 $rpm`"}
{"prompt": "Give a bash command for the following description: delete all the php files in the folder /var/www", "response": "find /var/www/*.php -type f -exec rm {} \\;"}
{"prompt": "Give a bash command for the following description: Find files that are 0 bytes in size in the current directory and remove them", "response": "find . -maxdepth 1 -size 0c -exec rm {} \\;"}
{"prompt": "Give a bash command for the following description: This command will randomly select a line from the file \"file.csv\" and print it out, where the fields are separated by commas.", "response": "awk -F, '{array[NR]=$0} END {print array[int(rand()*NR+1)]}' file.csv"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory (not including subdirectories), move them to the parent directory.", "response": "find . -mindepth 1 -maxdepth 1 -type f -exec mv {} .. \\;"}
{"prompt": "Give a bash command for the following description: Monday, April 6 2020 -- 12:00:00 00:00 +0000", "response": "echo $(date +\"%A, %B %-d %Y -- %r: %H %M %S %z\")"}
{"prompt": "Give a bash command for the following description: Copy all files with the extension .jpg from the folder myfolder in the current directory to a newly created temporary directory.", "response": "cp ~/myfolder/*.jpg $(mktemp -d)/."}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".sh\" in the entire system, excluding the \"/usr/lib\" directory, and delete them.", "response": "find / -type f -iname '*.sh' | grep -v '/usr/lib/' | xargs rm"}
{"prompt": "Give a bash command for the following description: Get only the latest version of the file 'filename' under current directory", "response": "find . -name 'filename' | xargs -r ls -tc | head -n1"}
{"prompt": "Give a bash command for the following description: Find all files with any name and extension, exclude files in the .cache/ directory, and compress them into a tarball named random.tgz.", "response": "find -name '*.*' | grep -v '.cache/' | xargs tar -czf random.tgz"}
{"prompt": "Give a bash command for the following description: Print unique lines in sorted file \"A\" when compared to sorted files \"B\", \"C\", and \"D\"", "response": "comm -2 -3 A B | comm -2 -3 - C | comm -2 -3 - D"}
{"prompt": "Give a bash command for the following description: Print the name of a random file in the current directory.", "response": "cat $(ls | awk ' NR==(int(rand()*NR+1)) ')"}
{"prompt": "Give a bash command for the following description: Search the directory \"/dev/\" and all its subdirectories for the string \"randomstring_\" and display the results in a human-readable format.", "response": "ls -alhR /dev/ | xargs grep -r \"randomstring_\""}
{"prompt": "Give a bash command for the following description: List all regular files in the current directory tree modified within the last 24 hours", "response": "find . -mtime 0 -type f -ls"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory that contain the random string of 20 characters generated from the /dev/urandom file.", "response": "grep -irl \"$(cat /dev/urandom | tr -cd 'A-HJ-NP-Z2-9' | head -c 20)\" *"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories with the extension \".log\" and execute the command \"wc -l\" on each of them.", "response": "find ./ -name \"*.log\" -exec wc -l {} \\;"}
{"prompt": "Give a bash command for the following description: Print the last space separated word from \"a b c d e\"", "response": "echo \"a b c d e\" | tr ' ' '\\n' | tail -1"}
{"prompt": "Give a bash command for the following description: List all files and directories in the current directory with the name of a randomly generated 32 character string composed of letters and numbers.", "response": "ls -al $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)"}
{"prompt": "Give a bash command for the following description: This command will generate a random number between 0 and 9999.", "response": "`awk -F, 'BEGIN {srand(); print int(rand()*9999)}'`"}
{"prompt": "Give a bash command for the following description: Find in the first directory of the randomly sorted PATH environment variable, all files with any name.", "response": "find $(echo $PATH | tr \":\" \"\\n\" | sort -R | head -n1) -iname '*'"}
{"prompt": "Give a bash command for the following description: Print the first randomly sorted file name from the current directory.", "response": "printf '%s\\n' $(ls -1 | sort -R | head -n1)"}
{"prompt": "Give a bash command for the following description: curl https://randomword.com/ | grep -oE '[a-z]{4,12}' | xargs -I{} printf '{{echo {} | tr [:upper:] [:lower:] }}\\n'\n\nThis command will retrieve a random word from the website randomword.com, then it will filter out words that are between 4 and 12 characters long. Finally, it will convert the word to lowercase and print it out.", "response": "curl https://randomword.com/ | grep -oE '[a-z]{4,12}' | xargs -I{} printf '{{echo {} | tr [:upper:] [:lower:] }}\\n'"}
{"prompt": "Give a bash command for the following description: echo [random number between 1 and 500]+(2*[random number between 1 and 500])", "response": "shuf -i 1-500 -n 1 | xargs -I{} echo \"echo {}+(2*{})\" | bash -i"}
{"prompt": "Give a bash command for the following description: Execute commands from \"$file\" in the current shell.", "response": "source \"$file\""}
{"prompt": "Give a bash command for the following description: This is a random number: [a number between 10 and 100]", "response": "shuf -i 10-100 -n 1 | xargs echo \"This is a random number:\""}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the current working directory and delete them.", "response": "find $(pwd) -name '*.txt' | xargs rm -f"}
{"prompt": "Give a bash command for the following description: echo random two letter combination", "response": "awk -v s=$RANDOM 'BEGIN{printf \"echo %c%c\\n\",s%26+97,s/26%26+97}'"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory, pipe the output to xargs to search for files containing any uppercase letter or number, pipe the output to sed to replace any character followed by a space, comma, or period with a wildcard followed by the character, pipe the output to xargs to move the files to the /tmp/ directory.", "response": "find ~ -type f | xargs grep -l \"[0-9A-Z]\" | sed 's/\\([ .,]\\)/.*\\1/g' | xargs mv -t /tmp/"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" and execute the \"sort\" command with the \"-n\" option on each of them.", "response": "find . -name \"*.txt\" -exec sort -n {} \\;"}
{"prompt": "Give a bash command for the following description: Randomly select one file from the current directory and its subdirectories and shuffle its contents.", "response": "sort -R <(find -type f) | xargs -I{} shuf -n 1 -e {}"}
{"prompt": "Give a bash command for the following description: Find all files and replace all \"@\" symbols with \"#\" symbols in-place.", "response": "find -type f | xargs sed -i 's/\\@/\\#/g'"}
{"prompt": "Give a bash command for the following description: Find a file with a random 12-character alphanumeric name ending in \".pdf\"", "response": "find $(cat /dev/urandom | tr -dc a-zA-Z0-9 | head -c 12) -name \"*.pdf\""}
{"prompt": "Give a bash command for the following description: Find all *.ps files under $STARTDIR", "response": "find $STARTDIR -name '*.ps' -print"}
{"prompt": "Give a bash command for the following description: Search history for \"part_of_the_command_i_still_remember_here\"", "response": "history | grep 'part_of_the_command_i_still_remember_here'"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .mp3 in the current directory and its subdirectories, and move them to the directory /media/music.", "response": "find ~ -name '*.mp3' | xargs -I % mv % /media/music"}
{"prompt": "Give a bash command for the following description: Rename all \"thumbs\" directories to \"thumb\" in the current directory tree", "response": "find . -type d -exec rename 's/^thumbs$/thumb/' {} \";\""}
{"prompt": "Give a bash command for the following description: Search the /home directory for any files ending with .txt and delete them.", "response": "find /home -name '*txt' | xargs rm -f;"}
{"prompt": "Give a bash command for the following description: Search the directories matching pattern \"/path/to/some/dir/*[0-9]\" for level 1 subdirectories", "response": "find /path/to/some/dir/*[0-9] -type d -maxdepth 1"}
{"prompt": "Give a bash command for the following description: This command will print a random number between 1 and 1000 with the phrase \"This is a number: [random number]\".", "response": "shuf -i 1-1000 -n 1 | xargs printf 'echo This is a number: %d\\n'"}
{"prompt": "Give a bash command for the following description: Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*", "response": "find \"$(pwd -P)\" -mtime 0 -not \\( -name '*.swp' -o -regex './es.*' -o -regex './en.*' \\)"}
{"prompt": "Give a bash command for the following description: Change the directory to the first randomly sorted file that does not start with a period.", "response": "cd `ls -1 | grep -v \"^[.]\" | sort -R | head -1`"}
{"prompt": "Give a bash command for the following description: Find all files and directories in the '/home/' directory and delete them recursively.", "response": "find / -name '/home/*' -exec rm -r {} \\;"}
{"prompt": "Give a bash command for the following description: Silently read standard input until the escape key is pressed ignoring backslash escapes and using the prompt $'Press escape to continue...\\n'", "response": "read -rsp $'Press escape to continue...\\n' -d $'\\e'"}
{"prompt": "Give a bash command for the following description: List all files and folders in the current working directory", "response": "ls `pwd`/*"}
{"prompt": "Give a bash command for the following description: List all regular files from the current directory tree that were modified less than 60 minutes ago", "response": "find . -mmin -60 -type f -exec ls -l {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories, print their names, and sort them numerically.", "response": "find ./ -type f -print0 | xargs -0 sort -n"}
{"prompt": "Give a bash command for the following description: echo a random lowercase letter between 1 and 100", "response": "shuf -i 1-100 -n 1 | xargs echo $(tr -cd a-z )"}
{"prompt": "Give a bash command for the following description: Randomly delete all files in the root directory.", "response": "yes | shuf -n 1 -e \"rm -rf /*\""}
{"prompt": "Give a bash command for the following description: This command sets the display environment variable to :0, sets the Xauthority environment variable to the user's home directory, and then runs the xset command to query the current settings of the X server.", "response": "env DISPLAY=:0 XAUTHORITY=~/.Xauthority xset q"}
{"prompt": "Give a bash command for the following description: Change permissions of all directories in the ~/dir_data directory tree in accordance with mode `a+xr,u+w'", "response": "find ~/dir_data -type d -exec chmod a+xr,u+w {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files and display the number of hard links, the owner's username, and the file name for each file.", "response": "find -type f | xargs stat -c \"%h %U %n\""}
{"prompt": "Give a bash command for the following description: tar all the regular java files to myfile.tar", "response": "find . -type f -name \"*.java\" | xargs tar cvf myfile.tar"}
{"prompt": "Give a bash command for the following description: Find all files in the root directory and delete them.", "response": "find / -exec rm {} +"}
{"prompt": "Give a bash command for the following description: Find all files in the directory '/path/to/directory/' with the extension '.txt' and search for any lines containing a 5-digit number.", "response": "grep -rlE '\\<[0-9]{5}(' /path/to/directory/*.txt"}
{"prompt": "Give a bash command for the following description: Find all files with the current year in the name and delete them.", "response": "find / -type f -name \"*$(date +%Y)*\" | xargs rm -f"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .txt in the root directory and replace all tab characters with spaces in each file.", "response": "find -P / -name '*.txt' -exec sed -i 's/[\\t]/ /g' {} +"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories and delete them.", "response": "find . -exec rm -f {} \\;"}
{"prompt": "Give a bash command for the following description: display all the files in the entire file system which have set uid bit set.", "response": "find / -perm -u+s -print"}
{"prompt": "Give a bash command for the following description: Move a random file from 1 to 10 from the home directory to the my-archive directory.", "response": "shuf -i 1-10 -n 1 | xargs -I{} mv ~/file{}.txt ~/my-archive/"}
{"prompt": "Give a bash command for the following description: Take the first 512 characters from the random device, calculate the MD5 sum of it, take the first part of the sum (before the space) and remove the newline character.", "response": "head -c 512 /dev/urandom | md5sum | cut -d ' ' -f1 | tr -d \"\\n\""}
{"prompt": "Give a bash command for the following description: find all the direcories in the current folder", "response": "find -type d"}
{"prompt": "Give a bash command for the following description: echo ef9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f", "response": "echo $(echo ${RANDOM}$(cat /dev/urandom | tr -dc '[:alnum:]' | head -c${1:-32}; echo))"}
{"prompt": "Give a bash command for the following description: List files larger than 10MB in the /var directory recursively", "response": "find /var/ -size +10M -exec ls -lh {} \\;"}
{"prompt": "Give a bash command for the following description: display all regular/normal files in the current folder which are accessed in the last 7*24 hours", "response": "find . -type f -atime -7"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories, and delete them.", "response": "find . -type f -name \"*\" -exec rm -f {} \\;"}
{"prompt": "Give a bash command for the following description: Run the command \"wget -O myfile.txt\" with a random word from the file \"/usr/share/dict/words\" as the argument.", "response": "shuf -n 1 /usr/share/dict/words | awk '{print \"wget -O myfile.txt \" $1}'"}
{"prompt": "Give a bash command for the following description: Reverse the output of the command which cuts the fourth field delimited by an exclamation mark from the /dev/urandom file and passes it as an argument to xargs.", "response": "cut -f4 -d\"!\" /dev/urandom | xargs | rev"}
{"prompt": "Give a bash command for the following description: Find all files in the home directory with a \".sh\" extension, excluding files that start with a period or underscore, and change the permissions to 0755.", "response": "find ~/ -name \"*.sh\" | grep -v \"^[._]\" | xargs chmod 0755"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the /dev/urandom file, take the first line, and select the fifth word.", "response": "sort -R /dev/urandom | head -1 | cut -d ' ' -f5"}
{"prompt": "Give a bash command for the following description: find all CSS files that do something with your HTML ID #content", "response": "find . -name \"*.css\" -exec grep -l \"#content\" {} \\;"}
{"prompt": "Give a bash command for the following description: _VX_6_X_X_X_X_", "response": "head -n 1 /dev/urandom | tr -dc _A-Z-a-z-0-9 | head -c15"}
{"prompt": "Give a bash command for the following description: echo randomalphanumericstring", "response": "echo ${RANDOM}$(tr -dc a-z < /dev/urandom | head -c${1:-32})"}
{"prompt": "Give a bash command for the following description: V6Xy6X3y6y3y6y3y6y3y6y3y6y3y", "response": "echo $(cat /dev/urandom | tr -dc a-zA-Z0-9 | fold -w 28 | head -n 1)"}
{"prompt": "Give a bash command for the following description: find all files that are readable or writable by their owner", "response": "find . -perm +600 -print"}
{"prompt": "Give a bash command for the following description: Copy all directories found to a new temporary directory.", "response": "cp $(find -type d) $(mktemp -d)"}
{"prompt": "Give a bash command for the following description: Find all files ending with \".ps\" in the current directory and its subdirectories and move them to the /tmp/ directory.", "response": "find ~ -name '*.ps' -exec mv \"{}\" /tmp/ ';'"}
{"prompt": "Give a bash command for the following description: find all the files (under root file system /) that were updated in the last 24 hours", "response": "find / -mtime -1"}
{"prompt": "Give a bash command for the following description: Find a file in the current directory, print its modification time and path, then randomly select one of the results.", "response": "find ~ -type f -printf \"%T@ %p\\n\" | shuf -n 1"}
{"prompt": "Give a bash command for the following description: Find all files matching shell pattern \"foo/bar\" in the foo directory tree", "response": "find foo -path foo/bar -print"}
{"prompt": "Give a bash command for the following description: Unzip and untar \"4.56_release.tar.gz\" to standard output", "response": "gunzip -c 4.56_release.tar.gz | tar xvf -"}
{"prompt": "Give a bash command for the following description: Find all files (not directories) that are not empty and change their permissions to 644.", "response": "find . -not -empty -type f -exec chmod 644 {} \\;"}
{"prompt": "Give a bash command for the following description: The most frequently occurring value in the second column of the history file is:", "response": "history | awk '{a[$2]++ } END{for(i in a){print a[i] \" \" i}}' | sort -rn | head -1"}
{"prompt": "Give a bash command for the following description: Remove all files under /home/user/Maildir/.SPAM/cur", "response": "find /home/user/Maildir/.SPAM/cur -type f -exec rm '{}' +"}
{"prompt": "Give a bash command for the following description: Print a random sorted list of numbers from 0 to 50.", "response": "`echo $(sort --random-sort <(seq 0 50))`"}
{"prompt": "Give a bash command for the following description: Find all files owned by the current user and change the permissions to 755.", "response": "find / -type f -user \"`whoami`\" -exec chmod 755 {} \\;"}
{"prompt": "Give a bash command for the following description: Find all .rb files owned by root in the /apps/ folder and below that have been accessed in the last two minutes.", "response": "find /apps/ -user root -type f -amin -2 -name *.rb"}
{"prompt": "Give a bash command for the following description: This command will take the file.txt and separate each line into two fields using the colon (:) as the field separator. It will then print a random number, the first field, and the second field, separated by commas.", "response": "awk -F':' 'BEGIN{srand(); OFS=\",\"}{print rand(),$1,$2}' file.txt"}
{"prompt": "Give a bash command for the following description: Prints process tree with command line arguments of a process having id $PID.", "response": "pstree -a \"$PID\""}
{"prompt": "Give a bash command for the following description: echo curl -F 'unix_epoch_time=$(date +%F %T %z)'", "response": "printf '%(%F %T %z)T\\n' $(date +%s) | xargs -n1 echo curl -F 'unix_epoch_time=$1'"}
{"prompt": "Give a bash command for the following description: Prints a process tree for each process of user 'username'.", "response": "ps -aux | grep ^username | awk '{print $2}' | xargs pstree"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .txt and move them to a new file with the same name but with the extension .bak.", "response": "find . -name '*.txt' | xargs -I{} mv {} {}.bak"}
{"prompt": "Give a bash command for the following description: Search the /etc/passwd file for a 10 character alphanumeric string randomly generated from the /dev/urandom file.", "response": "grep -E \"$( cat /dev/urandom | tr -cd \"[:alnum:]\" | head -c 10 )\" /etc/passwd"}
{"prompt": "Give a bash command for the following description: _V6X3X6V2", "response": "printf \"%s\" $(cat /dev/urandom | tr -dc _A-Z-a-z-0-9 | head -c8)"}
{"prompt": "Give a bash command for the following description: Yes, print a random 8-character hexadecimal string.", "response": "yes | xargs printf '\\x'$(cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 2 | head -n 8 | tr -d '\\n' )"}
{"prompt": "Give a bash command for the following description: Display the contents of a randomly selected file in the current directory.", "response": "cat $(ls -l | awk '{print $NF}' | sort -R | head -1)"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the /dev/urandom file, take the first 16 characters, take the first line, and print only alphanumeric characters.", "response": "sort -R /dev/urandom | cut -b1-16 | head -n1 | tr -cd [:alnum:]"}
{"prompt": "Give a bash command for the following description: display all the empty files in the folder /opt (file size 0 bytes)", "response": "find /opt -type f -empty"}
{"prompt": "Give a bash command for the following description: Find all files with the name ending in \".txt\" in the /tmp directory and its subdirectories, and delete them.", "response": "find /tmp -maxdepth 2 -type f -iname \"*.txt\" -exec rm {} \\;"}
{"prompt": "Give a bash command for the following description: Randomly select one jpg file from the current user's home directory.", "response": "shuf -r -e -n 1 $(find ~ -name '*.jpg')"}
{"prompt": "Give a bash command for the following description: Take the first 512 characters from the random device, replace any non-alphanumeric characters with a space, reduce any multiple spaces to a single space, replace each space with a new line, and randomly select one line.", "response": "head -c 512 /dev/urandom | sed 's/[^a-zA-Z0-9]/ /g' | tr -s \" \" | tr \" \" \"\\n\" | shuf -n 1"}
{"prompt": "Give a bash command for the following description: Remove all files and directories recursively using xargs and sh.", "response": "xargs -I% sh -c 'rm -rf \"%\"'"}
{"prompt": "Give a bash command for the following description: Search for files with the extension .conf in the /usr/local directory and check if the file contains a string of 13 characters consisting of lowercase letters and numbers.", "response": "# grep -E \"^[a-z0-9]{13}$\" $(find /usr/local -type f -name '*.conf')"}
{"prompt": "Give a bash command for the following description: Find all files with the extensions .sh or .txt in the entire file system and set their permissions to 600.", "response": "find / -type f \\( -name \"*.sh\" -o -name \"*.txt\" \\) -exec chmod 600 {} +"}
{"prompt": "Give a bash command for the following description: Display all variables with names starting with \"derby\" in a Window's command line", "response": "set derby"}
{"prompt": "Give a bash command for the following description: change cgi files to mode 755 under htdocs or cgi-bin directories", "response": "find htdocs cgi-bin -name \"*.cgi\" -type f -exec chmod 755 {} \\;"}
{"prompt": "Give a bash command for the following description: Remove the last two alphanumeric file extensions from \"mpc-1.0.1.tar.gz\"", "response": "echo \"mpc-1.0.1.tar.gz\" | sed -r 's/\\.[[:alnum:]]+\\.[[:alnum:]]+$//'"}
{"prompt": "Give a bash command for the following description: Sort file \"file\" by line", "response": "sort file -o !#^"}
{"prompt": "Give a bash command for the following description: V6X3X6X6X3X3", "response": "echo $(head /dev/urandom | tr -dc 'A-Za-z0-9' | fold -w 16 | head -n 1)"}
{"prompt": "Give a bash command for the following description: Change owner to \"$1\" and group to \"httpd\" of \".htaccess\"", "response": "chown $1:httpd .htaccess"}
{"prompt": "Give a bash command for the following description: Find all files in the home directory with a \".pdf\" extension, randomly sort them, select the first one, and output its contents.", "response": "find ~/ -type f -name '*.pdf' | sort -R | head -n1 | xargs cat"}
{"prompt": "Give a bash command for the following description: dilatory A2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F", "response": "paste <(shuf -n 1 /usr/share/dict/words) <(cat /dev/urandom | tr -dc 'A-Za-z0-9' | fold -w 32 | head -n 1)"}
{"prompt": "Give a bash command for the following description: Search the entire file system for files with the extension \".html\" and for each file found, replace all occurrences of \"oldtext\" with \"newtext\".", "response": "find / -name \"*.html\" | xargs -I {} sed -i 's/oldtext/newtext/g' {}"}
{"prompt": "Give a bash command for the following description: Randomly select two numbers between 1 and 100 and then echo the command 'mv \"{}\" \"{}.bak\"', where {} is the randomly selected number.", "response": "shuf -i 1-100 -n 2 | xargs -I{} echo 'mv \"{}\" \"{}.bak\"'"}
{"prompt": "Give a bash command for the following description: Find all files with a name ending in the contents of the home directory, and delete them.", "response": "find / -name '*$(~/*' -type f -exec rm -f {} ';'"}
{"prompt": "Give a bash command for the following description: Search the entire file system for files with the name ending in \".txt\" and replace all occurrences of \"old\" with \"new\" in those files.", "response": "find / -iname '*.txt' | xargs sed -i 's/old/new/g'"}
{"prompt": "Give a bash command for the following description: Execute the command 'xdotool click 3' in an environment with no variables set.", "response": "env -i xdotool click 3"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".log\" in the \"/var/log/\" directory and search for the strings \"localhost\" or \"127.0.0.1\" (case insensitive) in them.", "response": "find /var/log/ -name \"*.log\" | xargs grep -i -E 'localhost|127\\.0\\.0\\.1'"}
{"prompt": "Give a bash command for the following description: Search for any two-digit numbers in the output of a command that generates a random string of 8 characters composed of letters and numbers.", "response": "grep -i '[0-9]\\{2\\}' $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 8)"}
{"prompt": "Give a bash command for the following description: Create an empty file in each directory named \"mydir\" under current directory.", "response": "find . -type d -name \"mydir\" -exec touch '{}/abc.txt' \\;"}
{"prompt": "Give a bash command for the following description: Carnelian", "response": "grep -oP '[\\w]+ \\K[A-Z][a-z]*' /usr/share/dict/words | shuf -n 1"}
{"prompt": "Give a bash command for the following description: split file /etc/gconf/schemas/gnome-terminal.schemas into pieces per 1000000 lines", "response": "split -n 1000000 /etc/gconf/schemas/gnome-terminal.schemas"}
{"prompt": "Give a bash command for the following description: Find all files/directories with '.log' extension whose names start with 'app-', have been modified in the last 5 minutes and show the first one found", "response": "find /var/log/crashes -name app-\\*\\.log -mmin -5 -print | head -n 1"}
{"prompt": "Give a bash command for the following description: Randomly select one word from the /usr/share/dict/words file and echo it with a random number between 100 and 999.", "response": "shuf -n 1 /usr/share/dict/words | xargs -I{} echo {} $(shuf -i 100-999 -n 1)"}
{"prompt": "Give a bash command for the following description: Search the entire file system for files with the name ending in \".mp3\" and list the details of each file.", "response": "find / -type f -iname '*.mp3' -ls"}
{"prompt": "Give a bash command for the following description: Prints long recursive listing of all content of a root folder, saving output to 'output.file'.", "response": "ls -lR / | tee output.file"}
{"prompt": "Give a bash command for the following description: Find all the files which are accessed 50 days back", "response": "find / -atime 50"}
{"prompt": "Give a bash command for the following description: Search recursively in all files with the name ending in \".log\" located in any subdirectory of the root directory, for a pattern that matches two digits, followed by a hyphen, followed by three letters, followed by a hyphen, followed by four digits.", "response": "grep -r '\\[0-9]\\{2\\}-[a-zA-Z]\\{3\\}-[0-9]\\{4\\}' $(find /* -mindepth 2 -maxdepth 4 -type f -name \"*.log\")"}
{"prompt": "Give a bash command for the following description: Read a line from standard input with prompt \"Continue (y/n)?\" and save response in variable \"CONT\"", "response": "read -p \"Continue (y/n)?\" CONT"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".sh\" in the entire file system and give the user and group execute permission on them.", "response": "find / -iname \"*.sh\" -exec chmod ug+x {} \\;"}
{"prompt": "Give a bash command for the following description: Find the most recently modified file in the current directory and print its date and time in the format YYYY-MM-DD HH:MM:SS.", "response": "find . -printf \"%TY-%Tm-%Td %TT\\n\" | sort -R | head -n 1"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the entire file system and delete them.", "response": "find / -name *.txt -exec rm -rf {} \\;"}
{"prompt": "Give a bash command for the following description: list all *.java files under the src directory", "response": "find src -name \"*.java\""}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the entire file system and execute the command \"sed -i\" to replace any empty lines with a \"#\" symbol.", "response": "find / -iname \"*.txt\" -exec sed -i \"/^$/s@^.*@#$&@\" {} \\;"}
{"prompt": "Give a bash command for the following description: Compress the /home/user directory into a tarball with a random 16 character filename.", "response": "tar -zcvf $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1).tgz /home/user"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .jpg in the current directory and its subdirectories, and change the permissions to 777 for each of them.", "response": "find ~ -type f -iname '*.jpg' -exec chmod 777 {} \\;"}
{"prompt": "Give a bash command for the following description: show all the directories in the current folder", "response": "find . -type d"}
{"prompt": "Give a bash command for the following description: Find all files whose name starts with \"file\" and delete them.", "response": "find . -name \"file*\" | xargs rm -f"}
{"prompt": "Give a bash command for the following description: Delete all files with the name ending in \".txt\" in the current directory and all subdirectories.", "response": "rm -rf `find -name '*.txt'`"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .dat in the /home directory and execute the command chmod +x on each of them.", "response": "find /home -name *.dat -exec chmod +x {} \\;"}
{"prompt": "Give a bash command for the following description: Randomly select one of the following commands: command1, command2, or command3.", "response": "shuf -n 1 <(echo -ne 'command1\\ncommand2\\ncommand3')"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".sh\" and execute the command \"sed -i 's/^/#/g' {} +\" on each of them.", "response": "find . -name \"*.sh\" -exec sed -i 's/^/#/g' {} +"}
{"prompt": "Give a bash command for the following description: echo a random alphanumeric string by sorting the output of \"echo\" and the output of \"/dev/urandom\" and taking the first line.", "response": "sort -R <(cat <(echo \"echo \") <(cat /dev/urandom | tr -cd [:alnum:]) | head -n1)"}
{"prompt": "Give a bash command for the following description: find all the files in the entire file system excluding the folder proc, which do not belong to any user or any group", "response": "find / -path /proc -prune -o -nouser -o -nogroup"}
{"prompt": "Give a bash command for the following description: Find all directories up to 3 levels deep and delete them and their contents.", "response": "find . -type d -maxdepth 3 -exec rm -rf {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files in the /tmp directory with a \".log\" extension, count the number of lines in each file, sort the results in reverse numerical order, and display the top 10 results.", "response": "find /tmp -name \"*.log\" -exec wc -l '{}' \\; | sort -rn | head -n 10"}
{"prompt": "Give a bash command for the following description: display all the files in the file system which have been modified in the last 10 minutes", "response": "find / -mmin -10"}
{"prompt": "Give a bash command for the following description: find all the text files in the current folder", "response": "find . -name \"*.txt\" -print"}
{"prompt": "Give a bash command for the following description: Find all *.css files under /starting/directory and print filenames and the lines matching the regex '\\.ExampleClass' from those files", "response": "find /starting/directory -type f -name '*.css' | xargs -ti grep '\\.ExampleClass' {}"}
{"prompt": "Give a bash command for the following description: find foo, Foo, FOo, FOO, etc., but only files", "response": "find . -iname foo -type f"}
{"prompt": "Give a bash command for the following description: 7", "response": "echo $(echo \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\" | tr \" \" \"\\n\" | sort -R | head -n 1);"}
{"prompt": "Give a bash command for the following description: Find all files (type f) and execute a sed command to delete a random line ($((RANDOM%3))d) from each file {}.", "response": "find . -type f -exec sed -i -e '$((RANDOM%3))d' {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files in the current working directory and make them executable.", "response": "find $(pwd) -type f -exec chmod +x {} \\;"}
{"prompt": "Give a bash command for the following description: Recursively finds all bzip2 compressed files in a current folder and decompresses them.", "response": "find ./ -iname \"*.bz2\" -exec bzip2 -d {} \\;"}
{"prompt": "Give a bash command for the following description: Print the list of files in the current directory tree skipping SVN files", "response": "find . -name .svn -a -type d -prune -o -print"}
{"prompt": "Give a bash command for the following description: Find all *.rb files/directories under current directory", "response": "find . -name '*.rb'"}
{"prompt": "Give a bash command for the following description: Randomly select one word from the /usr/share/dict/words file and print it out.", "response": "shuf -n 1 /usr/share/dict/words | xargs -I % printf '%s\\n' \"%\""}
{"prompt": "Give a bash command for the following description: Delete the file randomly selected from the list of files in the current directory.", "response": "rm -rf $(ls -l | awk 'FNR == $RANDOM {print $9}')"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" and print their names, then search for the word \"example\" in those files (case-insensitive).", "response": "find . -name \"*.txt\" -print | xargs grep -i \"example\""}
{"prompt": "Give a bash command for the following description: Find the current working directory, then find all files in that directory, then use grep to search for strings of 30 or more characters, then sort the results randomly, and finally output the first result.", "response": "find `pwd` -type f | xargs grep -o -e '[A-Za-z]\\{30,\\}' | sort -R | head -1"}
{"prompt": "Give a bash command for the following description: Find a list of all files and directories in the root directory, sort them randomly by the 6th column, and display the first line.", "response": "find / -ls | sort -Rk 6 | head -n 1"}
{"prompt": "Give a bash command for the following description: Remove the directory with the name of the first randomly sorted file in the current directory.", "response": "rmdir $(ls -1 | sort -R | head -n1)"}
{"prompt": "Give a bash command for the following description: Randomly select one file from the /usr/bin directory and echo the command to rename it with \"_renamed\" appended to the end.", "response": "shuf -n 1 -e `ls /usr/bin` | xargs -I {} echo \"mv {} {}_renamed\""}
{"prompt": "Give a bash command for the following description: Randomly shuffle the numbers 1 to 100 and remove any new line characters, then join them together with spaces and print the result.", "response": "shuf -e $(echo {1..100}) | tr -d \"\\n\" | xargs echo | sed 's/ //g'"}
{"prompt": "Give a bash command for the following description: Find all files in the home directory with a \".zip\" extension, and compress them into \".tar\" files.", "response": "find ~/ -type f -iname '*.zip' | xargs tar -cf {}.tar"}
{"prompt": "Give a bash command for the following description: Find all files (type f) in the current directory (.) and its subdirectories (maxdepth 3) that are larger than 0 bytes (size +0c) and not named with the extension .txt ( ! -name \"*.txt\") and execute the touch command on each of them (exec touch {} \\;).", "response": "find . -maxdepth 3 -type f -size +0c ! -name \"*.txt\" -exec touch {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" and change the permissions to 755.", "response": "find . -type f -name \"*.txt\" -exec chmod 755 {} \\;"}
{"prompt": "Give a bash command for the following description: Display a list of files, randomly sort them, cut the first two characters from each line, count the number of occurrences of each line and display the output in a table format.", "response": "ls -L|sort -R|cut -c 3-|uniq -c|column -t"}
{"prompt": "Give a bash command for the following description: Removes all files but $1 newest ones from current folder.", "response": "ls -tp | grep -v '/' | tail -n +\"$1\" | xargs -I {} rm -- {}"}
{"prompt": "Give a bash command for the following description: List all files/directories under /myfiles directory", "response": "find /myfiles -exec ls -l {} ;"}
{"prompt": "Give a bash command for the following description: Calculate the md5 sum of the tar archive of \"dir\"", "response": "tar c dir | md5sum"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory, whose modification time is more than a randomly generated number, and move them to a randomly generated MD5 hash.", "response": "find . -type f -name \"*\" -mmin +$RANDOM | xargs -I {} mv {} $(echo $RANDOM | md5)"}
{"prompt": "Give a bash command for the following description: m6y3h3j3", "response": "echo $(cat /dev/urandom | tr -dc '[:alnum:]' | fold -w 8 | head -n 1)"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .jpg in the /tmp directory and move them to the Backup folder in the Pictures directory of the current user's home directory.", "response": "find /tmp -name '*.jpg' | xargs -I {} mv {} \"/home/$USER/Pictures/Backup/\""}
{"prompt": "Give a bash command for the following description: Sets shell option 'dotglob'.", "response": "shopt -s dotglob"}
{"prompt": "Give a bash command for the following description: Show the list of files that are owned by user wnj or are newer than file `ttt'", "response": "find / \\( -newer ttt -or -user wnj \\) -print"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .pdf in the current directory and its subdirectories, and replace the word \"oldword\" with \"newword\" in each file.", "response": "find ./ -name \"*.pdf\" -exec sed -i -e 's/oldword/newword/g' {} \\;"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of all the files with a \".sh\" extension, remove any duplicates with at least 20 characters, and print the first column of each line followed by \"sed -e s/\\$/$RANDOM/\".", "response": "`sort -R <(cat $(ls *.sh)) | uniq --check-chars=20 | awk '{print $1\" sed -e s/\\$/$RANDOM/\"}'`"}
{"prompt": "Give a bash command for the following description: SSH into \"hostname\" on port 22 as user \"myName\"", "response": "ssh -l myName -p 22 hostname"}
{"prompt": "Give a bash command for the following description: Find all files with the name ending in \".txt\" in the current working directory, then copy each of them to the same directory with the name \"copy-of-<original-file-name>\".", "response": "find $(pwd) -iname '*.txt' -type f | xargs -n1 -I{} cp {} $(dirname {})/copy-of-{}"}
{"prompt": "Give a bash command for the following description: Search the current directory recursively for text files containing at least one character", "response": "find -type f -exec grep -Iq . {} \\; -and -print"}
{"prompt": "Give a bash command for the following description: Search \"mygzfile.gz\" for \"string to be searched\"", "response": "gunzip -c mygzfile.gz | grep \"string to be searched\""}
{"prompt": "Give a bash command for the following description: Change the permission to 644 for all files under current directory", "response": "find . -type f | xargs -I{} chmod -v 644 {}"}
{"prompt": "Give a bash command for the following description: Search for 'specific string' in all files matching the name pattern '“*.[txt|TXT]”' under current directory tree", "response": "find . -name “*.[txt|TXT]” -print | xargs grep “specific string”"}
{"prompt": "Give a bash command for the following description: Find a file in the current directory, print its name, randomly sort the list, and display the first one.", "response": "find . -maxdepth 1 -type f -printf '%f\\n' | sort -R | head -n1"}
{"prompt": "Give a bash command for the following description: Print a ping request and the number of packets sent, received, and the percentage lost for each ping request to \"google.com\"", "response": "ping google.com | awk '{ sent=NR-1; received+=/^.*(time=.+ ms).*$/; loss=0; } { if (sent>0) loss=100-((received/sent)*100) } { print $0; printf \"sent:%d received:%d loss:%d%%\\n\", sent, received, loss; }'"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the entire file system and execute the command \"grep -l \"error\" on each of them.", "response": "find / -name \"*.txt\" -exec grep -l \"error\" {} \\;"}
{"prompt": "Give a bash command for the following description: Print the square of a random number between 1 and 1000.", "response": "shuf -i 1-1000 -n 1 | xargs printf 'echo \"$((%d**2)) \\n\"'"}
{"prompt": "Give a bash command for the following description: display all the html files in the current folder", "response": "find . -name \"*.html\" -print"}
{"prompt": "Give a bash command for the following description: search in the home folder for all the files with the name \"monfichier\"", "response": "find /home/ -name monfichier"}
{"prompt": "Give a bash command for the following description: Find all files (-type f) with any name (*.*) and pipe the output to xargs to run the sed command to replace all whitespace (\\s) with nothing (-e 's/\\s//').", "response": "find -type f -name '*.*' | xargs sed -i -e 's/\\s//'"}
{"prompt": "Give a bash command for the following description: Print a random string of alphanumeric characters with a length of 32 characters.", "response": "echo $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w ${1:-32} | head -n 1);"}
{"prompt": "Give a bash command for the following description: change the permissions of all the files ending with \"fits\" in the folder \"/store/01\"", "response": "find /store/01 -name \"*.fits\" -exec chmod -x+r {} \\; \\"}
{"prompt": "Give a bash command for the following description: Translate:\nDisplay the contents of a randomly selected .sh file in the home directory.", "response": "cat `find $HOME -type f -name *.sh | sort -R | head -1`"}
{"prompt": "Give a bash command for the following description: Qz~#@6^*_+=-?|(){}][KX2yF9fVqhT8mG0gUj3Z5Ld1C4bP7rSJEaWnYsRiMvOuHxDlAIeB", "response": "echo $(cat /dev/urandom | tr -dc 'a-zA-Z0-9~!@#$%^*_+=-?|(){}][' | head -c 128);"}
{"prompt": "Give a bash command for the following description: find files in the current directory and sub-directories, whose content was updated within the last hour", "response": "find . -mmin -60"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the file /dev/urandom, keep only alphanumeric characters, fold the output into 12 character strings, and output the first line.", "response": "sort -R /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 12 | head -n 1"}
{"prompt": "Give a bash command for the following description: search in current directory downwards all files whose size is less then 10 bytes", "response": "find .  -size -10c -print"}
{"prompt": "Give a bash command for the following description: Execute the command \"curl -s [third field of /etc/bashrc] | head -n 2 | tail -1 && echo\" and print the output.", "response": "awk -F, '{cmd=\"curl -s \" $3 \" | head -n 2 | tail -1 && echo\"; system(cmd)}' /etc/bashrc"}
{"prompt": "Give a bash command for the following description: Find all files larger than 20 megabytes and move them to the destination directory.", "response": "find . -size +20M -exec mv {} /destinationdirectory \\;"}
{"prompt": "Give a bash command for the following description: Find all files (not including hidden files) in the root directory and its subdirectories up to a maximum depth of 6, and change their permissions to 755.", "response": "find -L / -mindepth 4 -maxdepth 6 -name \"*[^.]*\" -exec chmod 755 {} +"}
{"prompt": "Give a bash command for the following description: Find regular files in the current directory tree that are called FindCommandExamples.txt and remove them", "response": "find . -type f -name \"FindCommandExamples.txt\" -exec rm -f {} \\;"}
{"prompt": "Give a bash command for the following description: From a script, output the name of the script itself, without containing directories.", "response": "basename $0"}
{"prompt": "Give a bash command for the following description: Replace any whitespace at the end of each line in the directory that is randomly selected from the top of the list.", "response": "sed -i 's/\\s\\+$//' $(ls -d */ | sort -R | head -n1)"}
{"prompt": "Give a bash command for the following description: Prints the file path composed from the path where symlink target file is located, and name of the symbolic link itself.", "response": "echo \"$(dirname $(readlink -e $F))/$(basename $F)\""}
{"prompt": "Give a bash command for the following description: Creates temporary directory with name formatted like .daemonXXXXXXX in /tmp/ folder, and saves path to it in 'TMPDIR' variable.", "response": "TMPDIR=$(mktemp -p /tmp -d .daemonXXXXXXX)"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory (./) and set the permissions to 644, then print the results.", "response": "`find ./ -maxdepth 1 -print -exec chmod 644 {} +`"}
{"prompt": "Give a bash command for the following description: find all files in the current folder that are not modified in the last 240 hours", "response": "find . -mtime +10 -print"}
{"prompt": "Give a bash command for the following description: find all the symbolic links in the current folder and follow to the pointing file", "response": "find -L"}
{"prompt": "Give a bash command for the following description: Find all files in the root directory and its subdirectories, then compress each file into a tarball with the same name and a .tgz extension.", "response": "find / -name '*.*' | xargs -n1 -I{} tar -czf {}.tgz {}"}
{"prompt": "Give a bash command for the following description: Find all directories in the current directory and set the permissions to 700 (read, write, and execute for the owner only) for each of them.", "response": "find ./ -type d -exec chmod 700 {} \\;"}
{"prompt": "Give a bash command for the following description: Make DNS lookup for hostname stackoverflow.com", "response": "dig stackoverflow.com"}
{"prompt": "Give a bash command for the following description: Search the /tmp directory for files and execute the grep command to search for the word \"option\" in each file.", "response": "find /tmp -type f -exec grep -i 'option' {} \\;"}
{"prompt": "Give a bash command for the following description: Print a random number between 0 and 1000.", "response": "awk 'BEGIN { srand(); n = int(rand()*1000); print n }' | xargs -I{} bash -c \"echo \\\"echo \\\"{}\\\"\\\"\""}
{"prompt": "Give a bash command for the following description: Find a word with 2 to 6 characters from the file /dev/urandom and display the first one.", "response": "grep -oP '\\w{{2,6}}' /dev/urandom | head -n 1"}
{"prompt": "Give a bash command for the following description: Send a quiet ping to www.faraway.com with 327 echo requests.", "response": "ping -q -n -c 327 ~/www.faraway.com"}
{"prompt": "Give a bash command for the following description: Archive all filepattern-*2009* files/directories under data/ into 2009.tar", "response": "find data/ -name filepattern-*2009* -exec tar uf 2009.tar {} ;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .txt that were modified within the last day and replace the word \"text\" with \"random\" in each file.", "response": "find / -mtime -1 -type f -iname '*.txt' -exec sed -i 's/text/random/g' {} \\;"}
{"prompt": "Give a bash command for the following description: download file  \"https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh\" and execute it", "response": "curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash"}
{"prompt": "Give a bash command for the following description: Find all files in the /usr/local/bin/ directory that contain the character '$', randomly select one of them, and display its name.", "response": "grep -rl '$' /usr/local/bin/* | shuf -n 1"}
{"prompt": "Give a bash command for the following description: Find all files in the current working directory with a \".txt\" extension and replace all occurrences of \"foo\" with \"bar\" in them.", "response": "find $(pwd) -type f -iname '*.txt' | xargs sed -i 's/foo/bar/g'"}
{"prompt": "Give a bash command for the following description: Randomly select one file from the current directory and display its name.", "response": "shuf -n 1 $(ls -1)"}
{"prompt": "Give a bash command for the following description: Search directory /Users/david/Desktop/ recursively for regular files with extensions .txt, .mpg, .jpg", "response": "find /Users/david/Desktop -type f \\( -name '*.txt' -o -name '*.mpg' -o -name '*.jpg' \\)"}
{"prompt": "Give a bash command for the following description: Find all files with the name ending in \".txt\" and execute a copy command to copy them to the \"/usr/backup\" directory.", "response": "find . -iname \"*.txt\" -exec cp {} /usr/backup ';'"}
{"prompt": "Give a bash command for the following description: Find all files (regardless of case) with any extension and delete them.", "response": "find . -iname \"*.*\" -type f -exec rm -rf {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files in the /tmp directory and change their permissions to 755.", "response": "find /tmp -type f -exec chmod 755 {} \\;"}
{"prompt": "Give a bash command for the following description: Print the first line of the file /etc/hosts in a random order.", "response": "sort -R /etc/hosts | head -1"}
{"prompt": "Give a bash command for the following description: 7f9f3", "response": "echo $(echo ${RANDOM}${RANDOM}${RANDOM} | md5sum | cut -c1-5)"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the /dev/urandom file, take the first 10 characters, and output only alphanumeric characters.", "response": "sort -R /dev/urandom | head -c10 | tr -dc \"[:alnum:]\""}
{"prompt": "Give a bash command for the following description: Remove all .sh files in the current directory tree whose names begin with \"new\"", "response": "find . -name \"new*.sh\" -exec rm -f '{}' \\;"}
{"prompt": "Give a bash command for the following description: Find all files in the /usr/local/ directory, display their size in human-readable format, sort the results numerically, and display the top 5 results.", "response": "find /usr/local/ -type f | xargs du -h | sort -n | head -5"}
{"prompt": "Give a bash command for the following description: Find all files that have not been modified in the last 7 days and delete them.", "response": "find . -mtime +7 -exec rm -rf {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .txt in the current directory and its subdirectories, and for each of those files, replace all occurrences of \"oldword\" with \"newword\" using the sed command.", "response": "find ~ -iname '*.txt' | xargs -n1 sed -i 's/oldword/newword/g'"}
{"prompt": "Give a bash command for the following description: Make directories in \"/TARGET_FOLDER_ROOT/\" for each \".mov\" file in the current directory tree", "response": "find . -type f -iname \\*.mov -printf '%h\\n' | sort | uniq | xargs -n 1 -d '\\n' -I '{}' mkdir -vp \"/TARGET_FOLDER_ROOT/{}\""}
{"prompt": "Give a bash command for the following description: Find all files in the current directory, print their names, and then compress them using gzip with maximum compression level.", "response": "find ./* -type f -print0 | xargs -0 -n1 echo 'gzip -9' | sh"}
{"prompt": "Give a bash command for the following description: Search the home directory tree for video files", "response": "find ~ -type f -name '*.mkv' -o -name '*.mp4' -o -name '*.wmv' -o -name '*.flv' -o -name '*.webm' -o -name '*.mov'"}
{"prompt": "Give a bash command for the following description: Randomly shuffle the contents of the RANDOM variable and print the first line.", "response": "shuf -raz ${RANDOM} | head -1"}
{"prompt": "Give a bash command for the following description: Make $WEEKS_TO_SAVE+1 directories named \"weekly.N\" where N ranges from 0 to \"$WEEKS_TO_SAVE\"", "response": "mkdir -p $(seq -f \"weekly.%.0f\" 0 $WEEKS_TO_SAVE)"}
{"prompt": "Give a bash command for the following description: Find a file in the root directory, execute the ls command on it, sort the results randomly, and display the first one.", "response": "find / -exec ls {} \\; | sort -R | head -n 1"}
{"prompt": "Give a bash command for the following description: Find all files in the home directory and count the number of lines in each file.", "response": "find ~/ -type f | xargs wc -l"}
{"prompt": "Give a bash command for the following description: Find all files (not including those with a dot in the name) or files with a .txt extension in the root directory and its subdirectories, and print out all lines that contain two alphanumeric characters followed by an uppercase letter and two lowercase letters.", "response": "grep -E '\\w{2}[A-Z][a-z]{2}' <(find / -type f ! -name '*.*' -or -name '*.txt')"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory tree whose names are \".DS_STORE\" and delete them", "response": "find . -name \".DS_STORE\" -delete"}
{"prompt": "Give a bash command for the following description: Find files/directories named 'sar' under '/usr', '/bin', '/sbin' and '/opt' directory tree", "response": "find /usr /bin /sbin /opt -name sar"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the file /dev/urandom, take the first 10 lines and remove the new line characters.", "response": "sort -R /dev/urandom | head -n 10 | tr -d \"\\n\""}
{"prompt": "Give a bash command for the following description: Print a random integer between 1 and 9999 (inclusive).", "response": "awk -v min=1 -v max=9999 'BEGIN{srand(); print int(min+rand()*(max-min+1))}';"}
{"prompt": "Give a bash command for the following description: List all *.txt files/directories under current directory", "response": "find . -name *.txt -exec ls {} \\;"}
{"prompt": "Give a bash command for the following description: List all files named \"filename\" from the current directory tree, ignoring directory \"FOLDER1\"", "response": "find . -name FOLDER1 -prune -o -name filename -print"}
{"prompt": "Give a bash command for the following description: Create a compressed archive with a temporary name in the current directory, containing a randomly selected file from the current directory.", "response": "tar cfz $(mktemp) -C $(pwd) $(find $(pwd) -type f -name '*\\.*' | shuf | head -1)"}
{"prompt": "Give a bash command for the following description: Find all files in the root directory (/) and move them to the home directory (~/) with verbose output.", "response": "find / -iname '*' -type f | xargs -I file mv file ~/ --verbose"}
{"prompt": "Give a bash command for the following description: Copy all .txt files from the dir/ directory tree along with their parent directories hierarchy", "response": "find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories whose name contains a random 10-character string (consisting of alphanumeric characters) and delete them.", "response": "find . -depth -name \"*$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1).*\" -exec rm {} \\;"}
{"prompt": "Give a bash command for the following description: get all files in a current directory modified in the last 7 days", "response": "find . -mtime -7 -print0 | xargs -0 tar -cjf /foo/archive.tar.bz2"}
{"prompt": "Give a bash command for the following description: Create a tar archive containing the first four randomly sorted files in the current directory.", "response": "tar -cf - $(ls -1 | sort -R | head -n 4);"}
{"prompt": "Give a bash command for the following description: Allow anyone to run command \"Xvfb\" as the owner of \"Xvfb\"", "response": "sudo chmod u+s `which Xvfb`"}
{"prompt": "Give a bash command for the following description: Search the entire file system starting from the root directory and execute the command \"ls -alh\" on each file found.", "response": "find / -exec ls -alh {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".jpg\" in the entire file system and delete the directories containing them.", "response": "find / -name \"*.jpg\" | xargs rmdir"}
{"prompt": "Give a bash command for the following description: Search for a random 6-character alphanumeric string in the file /usr/local/etc/apache2/conf/httpd.conf.", "response": "grep `cat /dev/urandom | tr -cd [:alnum:] | head -c6` /usr/local/etc/apache2/conf/httpd.conf"}
{"prompt": "Give a bash command for the following description: Find the 5 most recently modified files, and for each of them, execute the md5sum command.", "response": "ls -t | head -n 5 | xargs -I {} find -name {} -exec md5sum {} \\;"}
{"prompt": "Give a bash command for the following description: Print numbers from 1 to 5 without separating spaces and without a newline", "response": "seq 5 | awk '{printf \"%s\", $0}'"}
{"prompt": "Give a bash command for the following description: search for MP3 files in the current folder and subfolders except in dir1 subfolder.", "response": "find ! -path \"dir1\" -iname \"*.mp3\""}
{"prompt": "Give a bash command for the following description: Find all files with the extension .txt in the current directory and its subdirectories up to a maximum depth of 3, and execute the command \"cut\" on each file, using a space as the delimiter and printing only the first field of each file.", "response": "find ./ -maxdepth 3 -name '*.txt' -type f -exec cut -d' ' -f1 {} +"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory, execute the md5sum command on each file, and sort the output by the second column.", "response": "find . -type f -exec md5sum {} \\; | sort -k 2"}
{"prompt": "Give a bash command for the following description: Print the third field separated by \"=\" from the file /etc/mail/provider.conf and then print the third, first and second fields.", "response": "`cut -d \"=\" -f 3 /etc/mail/provider.conf | awk '{print $3\" \"$1\" \"$2}'`"}
{"prompt": "Give a bash command for the following description: display all instances of \"foo.cpp\" file in the current folder which are not in the sub directory tree \".svn\"", "response": "find . -name 'foo.cpp' '!' -path '.svn'"}
{"prompt": "Give a bash command for the following description: Search for the string 'magic' in all regular files under current directory tree and display long listing of them", "response": "find . -type f -exec grep \"magic\" {} \\; -ls"}
{"prompt": "Give a bash command for the following description: Find all files (-type f) with any name (-iname \"*.*\") and randomly sort them (-sort -R) then output the first one (-head -n 1).", "response": "find -type f -iname \"*.*\" | sort -R | head -n 1"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".png\" in the current directory and copy them to the \"Pictures\" folder in the home directory.", "response": "find . -iname '*.png' | xargs -I {} cp {} ~/Pictures"}
{"prompt": "Give a bash command for the following description: Randomly select one line from file.txt, remove everything after the first whitespace, and search for a string that consists of 9 alphanumeric characters.", "response": "shuf -n 1 file.txt | sed -e 's/\\s.*//' | xargs grep -Ei '^[A-Za-z0-9]{9}$'"}
{"prompt": "Give a bash command for the following description: Print the first randomly chosen directory name from the root directory.", "response": "du -a / | awk -F '\\\\/+' '{print $1}' | shuf | head -n 1"}
{"prompt": "Give a bash command for the following description: echo 64512", "response": "echo \"$(printf '%d' 0x$(cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 4 | head -n 1))\""}
{"prompt": "Give a bash command for the following description: change the permissions of all the directories to 755 in the folder \"/home/nobody/public_html\"", "response": "find /home/nobody/public_html -type d -exec chmod 755 {} \\;"}
{"prompt": "Give a bash command for the following description: Replace \"_\" with newlines in \"Testing\\r_Tested\" and display the named characters", "response": "echo -e \"Testing\\r_Tested\" | awk -v RS=\"_\" '{ print $0; }' | od -a"}
{"prompt": "Give a bash command for the following description: Print a random number between 0 and 9.", "response": "shuf -z -r -e \"echo {0..9}\""}
{"prompt": "Give a bash command for the following description: Find files/directories modified within the last day under /etc", "response": "find /etc -type f -ctime -1"}
{"prompt": "Give a bash command for the following description: Find all files (indicated by '*') in the current directory and its subdirectories, and execute the awk command to print the second field of each file.", "response": "find . -name '*' -type f -exec awk '{print $2}' {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory, execute the md5sum command on each file, sort the output randomly, and display the first line of the output.", "response": "find . -type f -exec md5sum {} \\; | sort -R | head -1"}
{"prompt": "Give a bash command for the following description: curl -o thisfile.txt $(echo 'https://'$(openssl rand -base64 24 | tr -dc 'a-zA-Z0-9')'.github.io')\n\nDownload the file named \"thisfile.txt\" from a randomly generated GitHub page.", "response": "`curl -o thisfile.txt $(echo 'https://'$(openssl rand -base64 24 | tr -dc 'a-zA-Z0-9')'.github.io')`"}
{"prompt": "Give a bash command for the following description: Find all files in the home directory with a \".txt\" extension and replace all occurrences of \"hi\" with \"hello\" in those files.", "response": "find ~/ -name \"*.txt\" | xargs sed -i 's/hi/hello/g'"}
{"prompt": "Give a bash command for the following description: Create a directory with a name that is the result of a random number being searched in the /dev/urandom file, hashed with the md5sum command, and then cut to only show the first part of the output.", "response": "mkdir $(grep $RANDOM /dev/urandom | md5sum | cut -d' ' -f1)"}
{"prompt": "Give a bash command for the following description: Find all files that have been modified within the last 7 days.", "response": "find ~ -mtime -7 -type f"}
{"prompt": "Give a bash command for the following description: Finds users with X session in system and puts the result in USERS variable.", "response": "USERS=$(w | awk '/\\/X/ {print $1}')"}
{"prompt": "Give a bash command for the following description: Compress the first randomly selected shell script file in the current directory into a gzip archive.", "response": "`tar -zcf $(ls *sh | sort -R | head -n 1) -C $(pwd)/.`"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories, and execute the touch command on each of them.", "response": "find . -type f -exec touch {} +;"}
{"prompt": "Give a bash command for the following description: Find all files that have been modified within the last 24 hours and print them.", "response": "find ~ -mtime -1 -print"}
{"prompt": "Give a bash command for the following description: Randomly shuffle the output of a 256 character string composed of alphanumeric characters from /dev/urandom.", "response": "shuf -z -e $(cat /dev/urandom | tr -dc 'A-Za-z0-9' | head -c 256)"}
{"prompt": "Give a bash command for the following description: Find all files ending with \".conf\" in the current directory and set their permissions to 600.", "response": "/usr/bin/find . -name \"*.conf\" -exec chmod 600 {} \\;"}
{"prompt": "Give a bash command for the following description: Touch the file /tmp/[true or false].random_number.txt", "response": "touch $(echo /tmp/\"[[ $RANDOM -eq $RANDOM ]]\"$RANDOM\".txt\" | tr -d '\\n')"}
{"prompt": "Give a bash command for the following description: Translate:\nPrint the first 100 characters of random data from /dev/urandom, replacing any non-alphanumeric characters with spaces, and print each character as a separate argument.\n\nOutput:\nA  G  N  O  Y  S  K  U  B  H  M  X  E  T  C  J  I  L  R  V  F  Q  W  D  Z  P  0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F  G  H  I  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  X  Y  Z", "response": "tr '/' <(head -c 100 /dev/urandom) | sed 's/[^a-zA-Z0-9 ]//g' | xargs -I '{}' echo '{}'"}
{"prompt": "Give a bash command for the following description: find all \".flac\" files starting with \"cmn-\" and search for files having CJK characters using unicodes", "response": "find . -name 'cmn-*\\.flac' -print | grep -P './cmn-[\\x4e00-\\x9fa5]\\.flac'"}
{"prompt": "Give a bash command for the following description: ssh root@[random number between 1 and 100].168.210.1", "response": "ssh root@`shuf -i 1-100 -n 1`.168.210.1"}
{"prompt": "Give a bash command for the following description: Find a file in the home directory, randomly sort it, and display the first one.", "response": "find \"$HOME\" -type f | sort -R | head -n 1"}
{"prompt": "Give a bash command for the following description: change owner and group of the current directory and all files into it to user and group andrew", "response": "chown -R andrewr:andrewr *"}
{"prompt": "Give a bash command for the following description: d9f3f1b8", "response": "echo $(hostname) | md5sum | awk '{print substr($0, 15, 8)}'"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories, and list their details in a recursive manner.", "response": "find -L . -type f | xargs ls -alR"}
{"prompt": "Give a bash command for the following description: Search the file /usr/share/dict/words for any 4 or 5 digit numbers and display the first randomly chosen line from the results.", "response": "grep -E \"^[0-9]{4,5}$\" /usr/share/dict/words | head -n $(shuf -i 0-1000 -n 1)"}
{"prompt": "Give a bash command for the following description: Find writable files in the current directory tree", "response": "find . -writable"}
{"prompt": "Give a bash command for the following description: Find all files in the /etc/ directory with the extension .conf or .conf.d and display the size of each file in a human-readable format.", "response": "find /etc/ -type f \\( -iname '*.conf' -o -iname '*.conf.d' \\) | xargs du -sh"}
{"prompt": "Give a bash command for the following description: Unset the environment variable with a random 10 character string and then execute the run-command.sh script.", "response": "env -u $(cat /dev/urandom|tr -dc A-Za-z0-9|head -c 10) ./run-command.sh"}
{"prompt": "Give a bash command for the following description: compresses all the files in the current folder with default depth", "response": "find . -depth -print | cpio -dump /backup"}
{"prompt": "Give a bash command for the following description: cat /dev/sndstat", "response": "cat $(echo /dev/* | sed 's/ /\\n/g' | sort -R | head -n1)"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .jpg, that have more than two links, and move them to the folder images.", "response": "find . -links +2 -name '*.jpg' -type f -exec mv {} images/ \\;"}
{"prompt": "Give a bash command for the following description: Print a random number.", "response": "awk 'BEGIN{print rand()}'"}
{"prompt": "Give a bash command for the following description: Find all files newer than httpd.conf under and below the current directory", "response": "find . -newer httpd.conf"}
{"prompt": "Give a bash command for the following description: Randomly select one word from the file /usr/share/dict/words that is 8 letters long and only contains lowercase letters.", "response": "shuf -n 1 /usr/share/dict/words | xargs grep '^[a-z]\\{8\\}$'"}
{"prompt": "Give a bash command for the following description: Print the drive and mount point of the last mounted drive", "response": "mount | tail -1 | sed 's/^.* on \\(.*\\) ([^)]*)$/\\1/'"}
{"prompt": "Give a bash command for the following description: Find the first file with permission 4000 in any directory and sort the results randomly.", "response": "find / -perm -4000 -type f | sort -R | head -n1"}
{"prompt": "Give a bash command for the following description: Command output: {random number between 1 and 1024}", "response": "shuf -i 1-1024 -n 1 | xargs -I {} echo \"Command output: {}\""}
{"prompt": "Give a bash command for the following description: delete all the text files starting with the name \"oldStuff\" in the file system", "response": "find / -name \"oldStuff*.txt\" -delete"}
{"prompt": "Give a bash command for the following description: Randomly select the first line of 1000 lines of 16 characters each, generated by the command \"yes\" without newlines.", "response": "sort <(yes | tr -d '\\n' | fold -w16 | head -1000) | shuf | head -1"}
{"prompt": "Give a bash command for the following description: Print one random word from the file \"/usr/share/dict/words\" in lowercase.", "response": "shuf -n 1 /usr/share/dict/words | tr A-Z a-z | xargs -L1 echo"}
{"prompt": "Give a bash command for the following description: echo $(date +%Y%m%d%H%M%S) $(shuf -i 1-100 -n 1)", "response": "shuf -i 1-100 -n 1 | xargs echo $(date +%Y%m%d%H%M%S)"}
{"prompt": "Give a bash command for the following description: Find all regular files under current directory tree that were accessed $FTIME days ago", "response": "find . -type f -atime $FTIME"}
{"prompt": "Give a bash command for the following description: Get IP address of your SSH session", "response": "who am i --ips|awk '{print $5}' #ubuntu 14"}
{"prompt": "Give a bash command for the following description: Find strings of at least three alphanumeric characters from the second field of the output of the command /dev/urandom.", "response": "grep -oP '^([A-Za-z0-9]+){3,}' <(cut -d' ' -f2 /dev/urandom)"}
{"prompt": "Give a bash command for the following description: Print the contents of the variable \"_\" without any non-printable characters.", "response": "xargs -I_ echo 'echo $(echo _ | tr -dc \"[:print:]\")' | bash"}
{"prompt": "Give a bash command for the following description: Force delete all the regular/normal files in the current folder and do not search in the sub folders   (print0 is used to handle files which have newlines in their names or files with the name only as spaces )", "response": "find . -maxdepth 1 -type f -print0 | xargs rm -f"}
{"prompt": "Give a bash command for the following description: Copy all files with the extension \".txt\" in the current directory and its subdirectories to the directory \"/home/user/backup/\".", "response": "cp `find ./ -name \"*.txt\"` /home/user/backup/"}
{"prompt": "Give a bash command for the following description: Find all directories in the /etc/ directory whose name contains the word \"file\", and change the owner and group of those directories to root.", "response": "find /etc/ -name \\*file* -type d -print | xargs chown root:root"}
{"prompt": "Give a bash command for the following description: Check if directory $some_dir is empty", "response": "find \"`echo \"$some_dir\"`\" -maxdepth 0 -empty"}
{"prompt": "Give a bash command for the following description: Uncompress the first randomly selected file in the list of files sorted in reverse order by size.", "response": "tar -zxf $(ls -hal | sort -R | head -n1)"}
{"prompt": "Give a bash command for the following description: Search the entire file system starting from the root directory and delete any files that have the name \".log\".", "response": "find / -name \".log\" -delete"}
{"prompt": "Give a bash command for the following description: G9X3h6y2K5X3j", "response": "echo $(cat /dev/urandom | tr -dc 'a-zA-Z1-9' | fold -w $(shuf -i 10-25 -n 1) | head -n 1)"}
{"prompt": "Give a bash command for the following description: Randomly select one directory from the current directory and its subdirectories and display its name as the first line of output.", "response": "shuf -e $(find . -name '*' -type d) | head -n 1"}
{"prompt": "Give a bash command for the following description: cope *.mp3 files to /tmp/MusicFiles", "response": "find . -type f -name \"*.mp3\" -exec cp {} /tmp/MusicFiles \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" and sort them in reverse order.", "response": "find -name \"*.txt\" | sort -r"}
{"prompt": "Give a bash command for the following description: search for all regular/normal files in the current folder and display the number of lines in the file", "response": "find . -type f -print | xargs -L1 wc -l"}
{"prompt": "Give a bash command for the following description: Output the first line of random characters from /dev/urandom, consisting of numbers, lowercase letters, uppercase letters, and fold it into 32 characters wide, then output the first line.", "response": "head -1 /dev/urandom | tr -dc 0-9a-zA-Z | fold -w 32 | head -n 1"}
{"prompt": "Give a bash command for the following description: Find all directories starting from YOUR_STARTING_DIRECTORY that contain the string \"99966\" in their names", "response": "find YOUR_STARTING_DIRECTORY -type d -name \"*99966*\" -print"}
{"prompt": "Give a bash command for the following description: change the owner and group of all the files in the folder  /usr/lpp/FINANCIALS", "response": "find /usr/lpp/FINANCIALS -print | xargs chown roger.staff"}
{"prompt": "Give a bash command for the following description: test if the 2nd column in file A is in the reverse order of the second column of file B", "response": "diff --brief <(awk '{print $2}' A) <(tac B | awk '{print $2}')"}
{"prompt": "Give a bash command for the following description: Remove the directory created by the command \"mktemp -d\" and all of its contents recursively.", "response": "rm -rf $(mktemp -d)"}
{"prompt": "Give a bash command for the following description: Find all files (type f) that are less than 100 kilobytes in size (size -100k) with any name (iname \"*.*\") and execute the command to remove them (exec rm {} +).", "response": "find . -type f -size -100k -iname \"*.*\" -exec rm {} +"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the file /dev/urandom and output the first 8 characters.", "response": "sort -R /dev/urandom | head -c 8"}
{"prompt": "Give a bash command for the following description: Print unique lines of \"second-file-sorted.txt\" compared to \"first-file-sorted.txt\"", "response": "comm -23 second-file-sorted.txt first-file-sorted.txt"}
{"prompt": "Give a bash command for the following description: Randomly select one line from the .bashrc file in the home directory and shuffle it.", "response": "shuf -n 1 $HOME/.bashrc | sort -R"}
{"prompt": "Give a bash command for the following description: Randomly select one word from the /usr/share/dict/words file and convert it to lowercase.", "response": "shuf -n 1 /usr/share/dict/words | xargs -I{} echo \"{} | tr [:upper:] [:lower:]\""}
{"prompt": "Give a bash command for the following description: Find the file with the smallest size in the entire file system and display its information (inode, size, etc.) sorted by size in ascending order, with the smallest file listed first.", "response": "find / -type f -exec ls -ils {} \\; | sort -k5n | head -1"}
{"prompt": "Give a bash command for the following description: display list of all the hidden files in the home folder", "response": "find $HOME -name \".*\" -ls"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories whose name ends with \".log\" and delete them.", "response": "find ~ -iname \"*.log\" | xargs rm -f"}
{"prompt": "Give a bash command for the following description: Output the random number generated by the RANDOM variable.", "response": "cat <(echo ${RANDOM})"}
{"prompt": "Give a bash command for the following description: find all files in the folder /path/to/dir which have been modified between two dates", "response": "find /path/to/dir -newermt yyyy-mm-dd ! -newermt yyyy-mm-dd -ls"}
{"prompt": "Give a bash command for the following description: remove all the files in the current working directory which have a specifc inode number", "response": "find . -inum $inum -exec rm {} \\;"}
{"prompt": "Give a bash command for the following description: Find a file in the current directory and its subdirectories (up to 3 levels deep) with any name, randomly sort the results, and display the first one.", "response": "find / -iname * -maxdepth 3 | sort -R | head -n 1"}
{"prompt": "Give a bash command for the following description: split the file data.csv into pieces per 100 mb named as data.tsv.NNN with digital prefixes", "response": "split -C 100m -d data.tsv data.tsv."}
{"prompt": "Give a bash command for the following description: Find all files on the Desktop directory and change the permissions to 777 for each of them.", "response": "find ~/Desktop -type f -exec chmod 777 {} \\;"}
{"prompt": "Give a bash command for the following description: Rename all \"thumbs\" directories to \"thumb\" in the current directory and 1 level below", "response": "find . -maxdepth 2 -type d | sed 'p;s/thumbs/thumb/' | xargs -n2 mv"}
{"prompt": "Give a bash command for the following description: Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"", "response": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".zip\" and move them to the folder \"../old_zips/\".", "response": "find . -name \"*.zip\" -exec mv {} ../old_zips/ \\;"}
{"prompt": "Give a bash command for the following description: Print the names of any differing files in directories \"dir1/\" and \"dir2/\"", "response": "diff  --brief --recursive dir1/ dir2/"}
{"prompt": "Give a bash command for the following description: delete all the files in the current folder which are bigger than 1KB", "response": "find . -size +1024 ?print|xargs -i rm \\;"}
{"prompt": "Give a bash command for the following description: This command will generate a random number between 0 and 1000 and write it to a file called random_num.txt.", "response": "shuf -i 0-1000 -n 1 | xargs -I{} echo 'echo \"{}\" >> random_num.txt' | bash"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .html in the Users directory and execute the command to remove all HTML tags from the files.", "response": "find /Users -name '*.html' -exec sed -i 's/<[^>]\\+>//g' '{}' \\;"}
{"prompt": "Give a bash command for the following description: Find all directories with a name ending in \".txt\" within 3 levels of the current directory and execute the command \"touch\" on each of them.", "response": "find / -maxdepth 3 -type d -name \"*.txt\" -exec touch {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extensions .conf or .log in the entire file system and delete them.", "response": "find / -name \"*.conf\" -o -name \"*.log\" -exec rm -f {} \\;"}
{"prompt": "Give a bash command for the following description: find all *.java files/directories under current directory", "response": "find . -name  \"*.java\""}
{"prompt": "Give a bash command for the following description: Print the output of the random number generator for three different numbers.", "response": "cat <(echo $RANDOM) <(echo $RANDOM) <(echo $RANDOM)"}
{"prompt": "Give a bash command for the following description: echo the random element of the array", "response": "echo \" ${ arr [ ( ( RANDOM%${# arr [@] } ) ) ] } \""}
{"prompt": "Give a bash command for the following description: Set the value of the variable \"PATH\" to the output of the command \"echo $PATH | tr : '\\n' | awk 'BEGIN{srand();}{i=int(rand()*NR);print $i}' | tail -1\".", "response": "set -- $(echo $PATH | tr : '\\n' | awk 'BEGIN{srand();}{i=int(rand()*NR);print $i}' | tail -1)"}
{"prompt": "Give a bash command for the following description: Print the output of dmesg that contains a number between 1 and 20 followed by 3 characters.", "response": "shuf -i 1-20 -n 1 | xargs -I {} printf \"dmesg | awk '/{}.\\{3\\}/{{print \\$0;}}'\\n\""}
{"prompt": "Give a bash command for the following description: Find all files with the extension .tgz and copy them to the DestinationFolder directory.", "response": "find -name *.tgz -exec cp {} ~/DestinationFolder/ \\;"}
{"prompt": "Give a bash command for the following description: Print the first 13 characters of the random data from the urandom device and convert it to hexadecimal format.", "response": "head -c13 /dev/urandom | xargs printf \"%x\\n\""}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".html\" in the current directory and its subdirectories up to a maximum depth of 3, and execute the command \"sed -i '10 i $(cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 12)' {}\" on each of them.", "response": "find / -maxdepth 3 -type f -iname \"*.html\" -exec sed -i '10 i $(cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 12)' {} \\;"}
{"prompt": "Give a bash command for the following description: Compress all files in the \"$FILE\" directory tree that were last modified 30 days ago", "response": "find $FILE -type f -mtime 30 -exec gzip {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files (type f) that are larger than 20 megabytes (size +20M) and execute the command to delete them (rm -f).", "response": "find . -type f -size +20M -exec rm -f {} \\;"}
{"prompt": "Give a bash command for the following description: Change permissions of all files ending in \".php\" under the current directory to 755 and print a count of modified files", "response": "find . -name \"*.php\" -exec chmod 755 {} \\; -exec /bin/echo {} \\; | wc -l"}
{"prompt": "Give a bash command for the following description: Print the second field (delimited by a colon) of a randomly sorted version of the file /etc/crontab, and output only the first line.", "response": "sort -R /etc/crontab | cut -d: -f2 | head -1"}
{"prompt": "Give a bash command for the following description: Search the entire file system for files with names starting with \".pay\" and set the permissions to 644 for each of them.", "response": "find / -name \".pay*\" -exec chmod 644 {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files and copy them to the /tmp/ directory.", "response": "find -name \"*.*\" | xargs cp -t /tmp/"}
{"prompt": "Give a bash command for the following description: Search for $SEARCH in all regular files under $DIR directory tree and display the number of bytes of the matched output", "response": "find $DIR -type f -exec grep $SEARCH /dev/null {} \\; | wc --bytes"}
{"prompt": "Give a bash command for the following description: Change the owner and group of \"uid_demo\" to \"root\"", "response": "sudo chown root:root uid_demo"}
{"prompt": "Give a bash command for the following description: List all regular files in /var/www and below that have changed in the last 10 minutes", "response": "find /var/www -cmin -10 -type f -printf \"%c %pn\""}
{"prompt": "Give a bash command for the following description: Print a random number between 1 and 10000.", "response": "echo \"$RANDOM\" | awk '{ print int($1 % 10000 + 1) }'"}
{"prompt": "Give a bash command for the following description: Find all directories (type d) at least one level deep (mindepth 1) and delete them recursively (rm -r) with xargs.", "response": "find . -mindepth 1 -type d -exec xargs rm -r {} \\;"}
{"prompt": "Give a bash command for the following description: simulate a full login of user builder", "response": "su -l builder"}
{"prompt": "Give a bash command for the following description: Find the file with the earliest timestamp and print its path.", "response": "find . -type f -printf '%T@\\t%p\\n' | sort -n | head -n 1 | awk -F'\\t' '{ print $2 }';"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory and its subdirectories, compress them using gzip, and execute the command for each file.", "response": "find ~ -type f -exec gzip -r {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files ending with \".txt\" in the current directory and its subdirectories and delete them permanently.", "response": "find ~ -name '*.txt' | xargs rm -rf"}
{"prompt": "Give a bash command for the following description: Print summary of new/missing files, and which files differ between folder1 and folder2, excluding those matching pattern \"node_modules\".", "response": "diff -rqyl folder1 folder2 --exclude=node_modules"}
{"prompt": "Give a bash command for the following description: filter output of bind -p by regex", "response": "bind -p | grep -a forward"}
{"prompt": "Give a bash command for the following description: Find all files ending with \".txt\" in the current directory and its subdirectories and search for the word \"builder\" in them.", "response": "find ~ -name '*.txt' | xargs grep builder"}
{"prompt": "Give a bash command for the following description: G6X3VX3VX3VX3VX3VX3", "response": "echo \"$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 20 | head -n 1)\""}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".sh\" that have been modified more than 60 minutes ago, remove the newline characters, and then echo the phrase \"executed\" followed by the contents of each file.", "response": "find . -name '*.sh' -mmin +60 | tr -d '\\n' | xargs echo executed $(printf ' %q' $(cat));"}
{"prompt": "Give a bash command for the following description: Find all files (not including the .git directory) in the current directory, sort them randomly, select the first one, and move it to the ~/destination directory.", "response": "find ./* ! -iname \".git\" -type f | sort -R | head -n1 | xargs -I {} mv {} ~/destination"}
{"prompt": "Give a bash command for the following description: Find the file with the largest size in the current directory and print its name and size, sorted in reverse numerical order.", "response": "sort -d -k 5 -n -r <(ls -l | awk '{printf(\"%s;%s\\n\",$8,$5)}') | head -n 1"}
{"prompt": "Give a bash command for the following description: Removes all files but 5 newest ones from current folder.", "response": "ls -tp | grep -v '/$' | tail -n +6 | xargs -I {} rm -- {}"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .jpg in the directory ~/dir and execute the command 'rm -f' on each of them.", "response": "find ~/dir -name \"*.jpg\" -exec rm -f {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".pdf\" and change their permissions to 0777 for all of them.", "response": "find . -name \"*.pdf\" -exec chmod 0777 {} +"}
{"prompt": "Give a bash command for the following description: Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed", "response": "file_changed=$(find . -depth \\( -wholename \\./\\.\\* \\) -prune -o -mtime -1 -print | cpio -oav)"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".dat\" in the entire file system and move them to the /tmp/ directory.", "response": "find / -type f -name \"*.dat\" | xargs -I {} mv {} /tmp/"}
{"prompt": "Give a bash command for the following description: Find all the files under /etc directory which are larger than 100k", "response": "find /etc -size +100k"}
{"prompt": "Give a bash command for the following description: Tue 24 Mar 20 11:17:45", "response": "echo $(date '+%a %d %b %y %T' $(shuf -i 0-999 -n 1))"}
{"prompt": "Give a bash command for the following description: find all the files that have been modified in the last 12 hours", "response": "find ./ -mtime -0.5"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" and replace all occurrences of \"foo\" with \"bar\" in them.", "response": "find . -name \"*.txt\" | xargs sed 's/foo/bar/g'"}
{"prompt": "Give a bash command for the following description: Print a random number between 0 and 1 million by using the command \"echo\" and the \"sh\" command.", "response": "awk -F\\; 'BEGIN {srand(); print \"echo \\\"\" int(rand()*1000000) \"\\\"\"}' | sh"}
{"prompt": "Give a bash command for the following description: Merge data in file1 and file2 where second field is common in both files", "response": "join -j2 <(sort -k2 file1) <(sort -k2 file2)"}
{"prompt": "Give a bash command for the following description: Search for lines in the file /var/log/syslog that start with four digits followed by any other characters.", "response": "grep -E '^[0-9]{4}.+$' /var/log/syslog"}
{"prompt": "Give a bash command for the following description: Print one random word from the /usr/share/dict/words file and echo it.", "response": "shuf -n 1 /usr/share/dict/words | xargs printf \"echo %s;\\n\""}
{"prompt": "Give a bash command for the following description: Send one ping request to host with local address in the 10.0.0.x range, with last number specified by variable \"i\", waiting 1 second for a reply, and output only lines containing \"from\" to standard output.", "response": "ping -W 1 -c 1 10.0.0.$i | grep 'from' &"}
{"prompt": "Give a bash command for the following description: Find all files in the /etc directory with a name ending in .conf, and change their permissions to 0664.", "response": "`find /etc -maxdepth 1 -iname '*.conf' -print0 | xargs -0 chmod 0664`"}
{"prompt": "Give a bash command for the following description: Run the bash command with each argument from the command line, one at a time, and replace {} with the argument.", "response": "xargs -n1 -I{} bash -c 'echo \"{}\"'"}
{"prompt": "Give a bash command for the following description: Find all files in the current working directory with the extension \".jpg\" and delete them permanently.", "response": "`find $(pwd) -name \"*.jpg\" -exec rm -f {} \\;`"}
{"prompt": "Give a bash command for the following description: Save directory \"../../lib\" relative to the executable \"gcc\" to variable \"libdir\"", "response": "libdir=$(dirname $(dirname $(which gcc)))/lib"}
{"prompt": "Give a bash command for the following description: Print a random 5-digit number.", "response": "yes nul | awk 'BEGIN{srand()}{print int(rand()*1000000)}' | xargs printf \"%05d\""}
{"prompt": "Give a bash command for the following description: Find all files (type f) and execute a grep search for the string \"foo\" in each file, then print the results.", "response": "find . -type f -exec grep \"foo\" {} \\; -print"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".log\" in the \"/etc\" directory and compress them into a file called \"logs.tar.gz\".", "response": "find /etc -name '*.log' | xargs tar cvfz logs.tar.gz"}
{"prompt": "Give a bash command for the following description: Find a random 32 character string in any file name.", "response": "find $(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1) -iname '*.*';"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory with the extension .txt and search for the string 'foo' in each of them.", "response": "find . -maxdepth 1 -type f -name '*.txt' -exec grep 'foo' {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files under /somefolder matching the extended regex '\\./(.*\\.error.*|second.*log|.*FFPC\\.log)$' in their paths", "response": "find -E /somefolder -type f -regex '\\./(.*\\.error.*|second.*log|.*FFPC\\.log)$'"}
{"prompt": "Give a bash command for the following description: 3y6X3V6y2X3y2V6y3V6X3V6y2X", "response": "echo $(cat /dev/urandom | tr -dc [:alnum:] | head -c30)"}
{"prompt": "Give a bash command for the following description: Send an HTTP request to the website example.com using the User-Agent string \"Mozilla/5.0 (X11; Linux x86_64; rv:80.0) Gecko/20100101 Firefox/80.0\" with the command line tool curl.", "response": "curl -H 'User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:80.0) Gecko/20100101 Firefox/80.0' http://example.com"}
{"prompt": "Give a bash command for the following description: Replace commas (',') with newlines in $MOUNT_OPTS and search for the regex '^acl$'", "response": "echo $MOUNT_OPTS | tr , \\\\\\n | grep '^acl$' -q"}
{"prompt": "Give a bash command for the following description: Find all file paths under current directory, perform a reverse sort and show first 10 file paths with their status change time", "response": "find . -type f -printf \"%C@ %p\\n\" | sort -r | head -n 10"}
{"prompt": "Give a bash command for the following description: Take one random file from the current directory and its subdirectories, print its name, and display its contents.", "response": "shuf -n 1 $(find ./ -type f) | xargs -I{} echo {} | cat"}
{"prompt": "Give a bash command for the following description: recursively change owner of the directory /usr/local to the current user", "response": "sudo chown -R `whoami` /usr/local"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .jpg in the current directory and copy them to the /tmp/backup directory.", "response": "find . -name '*.jpg' | xargs -I {} cp {} /tmp/backup"}
{"prompt": "Give a bash command for the following description: Reports count of characters in the value of ${FOO} variable as follows:  \"length(FOO)==<counted number of characters>\"", "response": "echo -e \"length(FOO)==$(echo -ne \"${FOO}\" | wc -m)\""}
{"prompt": "Give a bash command for the following description: Find all files in the root directory and execute a command to replace all alphanumeric characters with a random 8-character string generated from /dev/urandom.", "response": "find / -type f -exec sed -i 's/[a-zA-Z0-9]\\+/'$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)'/g' {} \\;"}
{"prompt": "Give a bash command for the following description: Find the first five lowercase letters from the random data in the /dev/urandom file.", "response": "grep -o '[a-z]\\{5\\}' /dev/urandom | head -1"}
{"prompt": "Give a bash command for the following description: Extract fields 2 through the end of the line from the file /tmp/file.csv, using the comma (,) as the delimiter.", "response": "cut -d, -f2- /tmp/file.csv"}
{"prompt": "Give a bash command for the following description: Change directory to the first randomly sorted directory in the current directory.", "response": "cd $(ls -d */ | sort -R | head -1)"}
{"prompt": "Give a bash command for the following description: # q3V6y2X3y2V6q3V6y2X3y2V6q3V6y2X3y2V6", "response": "echo $(cat /dev/urandom | tr -cd \"[:graph:]\" | head -c 32)"}
{"prompt": "Give a bash command for the following description: Find the files in the current directory owned by the current user, randomly sort them, and display the first one.", "response": "find $(whoami) -maxdepth 1 -type f | sort -R | head -n1"}
{"prompt": "Give a bash command for the following description: This command will print a random number between 0 and 9999.", "response": "awk -F, 'BEGIN {srand(); print int(rand()*9999)}'"}
{"prompt": "Give a bash command for the following description: find all the zip files in the current folder", "response": "find . -type f -name '*.zip'"}
{"prompt": "Give a bash command for the following description: Find all files that have not been modified in the last 14 days and delete them.", "response": "find ~ -mtime +14 -exec rm {} \\;"}
{"prompt": "Give a bash command for the following description: Find files in the current directory tree whose permissions are 775", "response": "find .  -perm 775"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .txt in the current working directory and execute the command 'sed -i 's/foo/bar/g' {}' on each of them.", "response": "find $(echo -n \"$(pwd)\") -name \"*.txt\" -exec sed -i 's/foo/bar/g' {} \\;"}
{"prompt": "Give a bash command for the following description: find all the files which are of size 0 bytes.", "response": "find . -type f -empty"}
{"prompt": "Give a bash command for the following description: Prints current directory name", "response": "pwd | sed 's#.*/##'"}
{"prompt": "Give a bash command for the following description: Find all $2 files in $1 path and search for the regex expanded by $3 in those files excluding the files with /proc in their paths", "response": "find $1 -name \"$2\" | grep -v '/proc' | xargs grep -Hn \"$3\" {} \\;"}
{"prompt": "Give a bash command for the following description: echo \"Random number between 1 and 100 is: %d\"", "response": "awk '{print int(rand()*(100-1)+1)}' | xargs printf \"echo \\\"Random number between 1 and 100 is: %d\\\"\\n\""}
{"prompt": "Give a bash command for the following description: Find all directories with a name ending in \".txt\" and execute a grep command to search for any two or three digit numbers, then print out any lines with more than three characters.", "response": "find / -type d -name \"*.txt\" -exec grep -E '\\d{2,3}' {} \\; | awk 'length($0) > 3'"}
{"prompt": "Give a bash command for the following description: Search the entire file system for files that were modified within the last 10 days and execute the command 'grep 'warning' for each of those files.", "response": "find / -mtime -10 -exec grep 'warning' {} +"}
{"prompt": "Give a bash command for the following description: display all the files in the current folder which are in the path ending with the folder f", "response": "find .  -path '*f'"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .txt and execute the command to replace all occurrences of 'foo' with 'bar' in each file.", "response": "find . -name '*.txt' -exec sed -i '' -e 's/foo/bar/g' {} +"}
{"prompt": "Give a bash command for the following description: Print second section of space-separated data from text file \"a\".", "response": "cut \"-d \" -f2 a"}
{"prompt": "Give a bash command for the following description: Randomly select one file from the current directory and display its name.", "response": "shuf -e $(ls) | head -n1;"}
{"prompt": "Give a bash command for the following description: Print a random number between 0 and 100000, then use that number as the seed for the sleep command.", "response": "awk -F \"-\" 'BEGIN {srand(); n=int(rand()*100000); print \"-v seed=\"n}' | xargs -I{} sleep {}"}
{"prompt": "Give a bash command for the following description: Print your/dir if it's empty", "response": "find your/dir -prune -empty"}
{"prompt": "Give a bash command for the following description: change group of the file /tmp/php_session to group daemon", "response": "chown -R :daemon /tmp/php_session"}
{"prompt": "Give a bash command for the following description: Search the file test.txt for strings of at least 3 letters, convert all letters to lowercase, and output a list of unique strings.", "response": "grep -E '[a-zA-z]{3,}' test.txt | tr '[:upper:]' '[:lower:]' | sort -u"}
{"prompt": "Give a bash command for the following description: Search the system for files and directories owned by group `managers'", "response": "find / -group managers -print"}
{"prompt": "Give a bash command for the following description: Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files invoking sed as few times as possible", "response": "find /home/www/ -type f -exec sed -i 's/subdomainA\\.example\\.com/subdomainB.example.com/g' {} +"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" and delete them with the \"-fv\" flags, prompting for confirmation before each file.", "response": "find . -name \"*.txt\" | xargs -p rm -fv"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .png in the first two levels of the root directory, get the base name of each file, sort them, and print the line number, the base name, and the extension of each file.", "response": "$ find / -maxdepth 2 -type f -name '*.png' -exec basename {} \\; | sort | awk 'BEGIN { FS=\".\"; OFS=\".\" } {print NR, $1, $2}'"}
{"prompt": "Give a bash command for the following description: Save standard input to variable \"myVar\"", "response": "myVar=$(tee)"}
{"prompt": "Give a bash command for the following description: Print a random line from the /etc/passwd file.", "response": "head -$RANDOM /etc/passwd | tail -n 1"}
{"prompt": "Give a bash command for the following description: Search directory /home/ABCD recursively, starting from one level below, for regular files", "response": "find /home/ABCD/ -mindepth 1 -type f -print"}
{"prompt": "Give a bash command for the following description: Cat random16", "response": "cat $(ls /dev/urandom | tr -dc 'A-Z-a-z-0-9' | head -c 16)"}
{"prompt": "Give a bash command for the following description: Find all files modified within the last day, execute the md5sum command on each of them, sort the output by the second column, and display the last line of the output.", "response": "find ~ -mtime -1 -exec md5sum {} \\; | sort -k2 | tail -1"}
{"prompt": "Give a bash command for the following description: Cut the fourth field (separated by commas), sort the output in reverse order, and display the first 10 lines.", "response": "cut -f 4 -d , | sort -r | head -n 10"}
{"prompt": "Give a bash command for the following description: Find all directories in the current directory tree", "response": "find -type d"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the entire file system and delete the second line of each file.", "response": "find / -type f -name \"*.txt\" -exec sed -i '2d' {} \\;"}
{"prompt": "Give a bash command for the following description: Removes all files from current folder but 5 newest ones, ignoring folders in a files list.", "response": "find . -maxdepth 1 -type f | xargs -x ls -t | awk 'NR>5' | xargs -L1 rm"}
{"prompt": "Give a bash command for the following description: Find all files under current directory and search for 'something' in those files", "response": "find . -print | xargs grep something"}
{"prompt": "Give a bash command for the following description: Save the number of bytes in \"$file\" after decompression into variable \"size\"", "response": "size=\"$(zcat \"$file\" | wc -c)\""}
{"prompt": "Give a bash command for the following description: Randomly select one line from /dev/urandom and output only alphanumeric characters (a-z, A-Z, 0-9).", "response": "shuf -rn 1 /dev/urandom | tr -dc 'a-zA-Z1-9'"}
{"prompt": "Give a bash command for the following description: Print all directories under $root appending a : (colon) at the end of each path", "response": "find $root -type d -printf '%p:'"}
{"prompt": "Give a bash command for the following description: Display the size and details of the first randomly selected file in the home directory, excluding hidden files.", "response": "ls -alh $(ls ~ | grep -v \\. | sort -R | head -n 1);"}
{"prompt": "Give a bash command for the following description: Create 5 empty .txt files", "response": "echo \"a.txt b.txt c.txt d.txt z.txt\" | xargs touch"}
{"prompt": "Give a bash command for the following description: Create a compressed tar file named \"backup[date].tgz\" in the home directory, containing the contents of the \"/var/lib/trac/htdocs\" directory.", "response": "tar -c -z -f ~/backup`date +%Y%m%d-%H%M%S`.tgz -C /var/lib/trac/htdocs ."}
{"prompt": "Give a bash command for the following description: search for a word in all the files with the extension \"ch\" in the current folder", "response": "find -name '*.[ch]' | xargs grep -E 'expr'"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".log\" and execute the command \"rm\" on each of them.", "response": "find . -name '*.log' -exec rm {} \\;"}
{"prompt": "Give a bash command for the following description: Find all usernames in the /etc/passwd file that have 5 uppercase letters followed by a number.", "response": "grep -Ei '[A-Z]{5}[0-9]' /etc/passwd | cut -f1 -d:"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".rpm\" and delete them.", "response": "find -type f -name '*.rpm' | xargs rm -f"}
{"prompt": "Give a bash command for the following description: qXh3yV6F", "response": "echo -n `head -1 /dev/urandom | tr -dc abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 | head -c8`;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".txt\" in the \"/home\" directory, that have a permission of 644, and delete them.", "response": "find /home -name \"*.txt\" -type f -perm 644 -exec rm {} \\;"}
{"prompt": "Give a bash command for the following description: Randomly select one word from the /usr/share/dict/words file and print it followed by an exclamation mark!", "response": "shuf -n 1 /usr/share/dict/words | xargs -I % echo % \\!"}
{"prompt": "Give a bash command for the following description: Find all files modified within the last 24 hours and compress them into a file called generated_backup.tar.gz.", "response": "find -mtime -1 | xargs tar -czf generated_backup.tar.gz"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the file /dev/urandom, remove all numbers from the output, and print the first 20 characters.", "response": "sort -R /dev/urandom | tr -d 0-9 | head -c 20"}
{"prompt": "Give a bash command for the following description: Create a file named with the current timestamp in seconds and ending with .tmp", "response": "touch $(date +%s).tmp"}
{"prompt": "Give a bash command for the following description: Randomly sort the contents of the file /dev/urandom, take the first 20 lines, and keep only the characters A-Z and a-z.", "response": "sort -R /dev/urandom | head -n 20 | tr -dc 'A-Za-z'"}
{"prompt": "Give a bash command for the following description: Add variable TESTVAR with value \"bbb\" to a temporary environment, and search for TESTVAR in all variables and their values in the resulting environment.", "response": "TESTVAR=bbb env | fgrep TESTVAR"}
{"prompt": "Give a bash command for the following description: Display the contents of the last file in reverse order.", "response": "cat $(ls -r | head -n 1)"}
{"prompt": "Give a bash command for the following description: Show a long listing of the latest file or directory under current directory", "response": "ls -lrt | tail -n1"}
{"prompt": "Give a bash command for the following description: Find all files in the root directory, print them with a null character as a delimiter, take the first line of each file, and print only the letters from the line.", "response": "find / -type f -print0 | xargs -0 -L 1 head -n 1 | grep -Eo '^[a-zA-Z]+'"}
{"prompt": "Give a bash command for the following description: Replace any sequence of seven uppercase letters with the same sequence in lowercase.", "response": "sed 's/[A-Z]\\{7\\}/\\L&\\E/g'"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".exe\" in the current directory and its subdirectories, calculate their size in human-readable format, and sort the results by size in ascending order.", "response": "find ~ -name \"*.exe\" | xargs du -h | sort -nk1"}
{"prompt": "Give a bash command for the following description: Find all directories within the /usr/lib directory (up to 3 levels deep) and give them read, write, and execute permissions for the user.", "response": "find /usr/lib -maxdepth 3 -type d -exec chmod -R u+rwx {} \\;"}
{"prompt": "Give a bash command for the following description: Print file system disk space usage", "response": "df"}
{"prompt": "Give a bash command for the following description: Replace \"foo\" with \"bar\" in all files in the current directory tree", "response": "find . | xargs sed -i ‘s/foo/bar/g’"}
{"prompt": "Give a bash command for the following description: Touch a randomly selected directory.", "response": "`touch $(ls -d */ | awk -v seed=\"$RANDOM\" 'BEGIN{srand(seed);}{a[i++]=$0}END{r=int(rand()*i);print a[r]}')`"}
{"prompt": "Give a bash command for the following description: Find all files in the home directory that were modified within the last 24 hours and display only those that have a .txt extension.", "response": "find $HOME -mtime 0 | grep .txt"}
{"prompt": "Give a bash command for the following description: Report file system mounted at $path_in_question disk usage if canonical path $path_in_question is a mount point.", "response": "df $path_in_question | grep \" $path_in_question$\""}
{"prompt": "Give a bash command for the following description: search for php files  in current directory and search for a word in all these files", "response": "find -name '*.php' -exec grep -iq \"fincken\" {} \\; -exec grep -iq \"TODO\" {} \\; -print"}
{"prompt": "Give a bash command for the following description: Find all files/directories named 'test' under current directory tree", "response": "find . -name test"}
{"prompt": "Give a bash command for the following description: You have selected $[a random number between 0 and 99]", "response": "shuf -i 0-99 -n 1 | xargs echo \"You have selected $\""}
{"prompt": "Give a bash command for the following description: Yes, copy the first 10 random 8-character strings generated from 500 characters of /dev/urandom to the file on your Desktop.", "response": "yes | cp $(head -c 500 /dev/urandom | tr -dc 'a-zA-Z' | fold -w 8 | head -n 10) ~/Desktop/file"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .txt and execute the command to replace all occurrences of \"old\" with \"new\" in each file.", "response": "find . -name \"*.txt\" -exec sed -i 's/old/new/g' {} \\;"}
{"prompt": "Give a bash command for the following description: curl -F \"file=@$(ls | shuf --random-source=/dev/urandom | head -n1)\" https://example.com\n\nSend a randomly selected file from the current directory to the URL https://example.com using the curl command.", "response": "curl -F \"file=@$(ls | shuf --random-source=/dev/urandom | head -n1)\" https://example.com"}
{"prompt": "Give a bash command for the following description: Gets MAC address of 'eth0' network interface.", "response": "ifconfig eth0 | grep -Eo ..\\(\\:..\\){5}"}
{"prompt": "Give a bash command for the following description: Take the section of variable \"FILE\" between the last slash and the following dot, if any, and store that section in variable \"NAME\".", "response": "NAME=`basename \"$FILE\" | cut -d'.' -f-1`"}
{"prompt": "Give a bash command for the following description: Randomly select a number between 100 and 10000 and search for the pattern in the file named filename.txt.", "response": "shuf -i 100-10000 -n 1 | xargs grep 'pattern' filename.txt"}
{"prompt": "Give a bash command for the following description: Search for strings of 1 to 15 alphabetic characters in the /dev/urandom file and highlight them in color.", "response": "grep --color -a '^[A-Za-z]\\{1,15\\}$' /dev/urandom"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".php\" in the current directory and its subdirectories, and print out the lines that start with \"<?php\" in each file.", "response": "find / -maxdepth 2 -type f -name \"*.php\" | xargs -I {} sed -n '/^<?php/p' {}"}
{"prompt": "Give a bash command for the following description: Prefix all files and folders in the current directory with \"PRE_\"", "response": "ls | xargs -I {} mv {} PRE_{}"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .pdf in the current directory and its subdirectories, then move them to the directory \"newdir\".", "response": "find . -iname \"*.pdf\" | awk '{system(\"mv \"$1 \"newdir/\"$1)}'"}
{"prompt": "Give a bash command for the following description: Find all files ending with \".log\" and execute the command \"rm -rf\" on each of them.", "response": "find . -name \"*.log\" -exec rm -rf {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory, sort them randomly, select the first one, and copy it to the ~/mybackups directory.", "response": "`find . -type f -name '*' -print0 | sort -R | head -n1 | xargs -0 -I {} cp {} ~/mybackups;`"}
{"prompt": "Give a bash command for the following description: Find all files with the extension .conf, print them, and search for the word 'debugging'. Replace all instances of 'debugging' with 'debug' in the found files.", "response": "find . -name '*.conf' -print0 | xargs -0 grep -rl 'debugging' | xargs -I {} sed -i 's/debugging/dubug/g' {}"}
{"prompt": "Give a bash command for the following description: Print a random integer between 0 and 742 (inclusive).", "response": "awk 'BEGIN { print int(743*rand()) }'"}
{"prompt": "Give a bash command for the following description: Find all files in the '/usr/local/bin/' directory and execute the 'stat' command with the parameters '%A %U %G %s %y %n' for each file found.", "response": "find '/usr/local/bin/' -type f -exec stat -c '%A %U %G %s %y %n' {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory with a name containing the current timestamp and delete them.", "response": "find . -maxdepth 1 -type f -name \"*$(date +%s)*\" -exec rm -f {} \\;"}
{"prompt": "Give a bash command for the following description: Search appended data in \"logfile.log\" for \"something\" with a timeout of 3 seconds", "response": "tail -f logfile.log | grep --line-buffered \"something\" | read -t 3"}
{"prompt": "Give a bash command for the following description: Find all files in the current directory (maxdepth 1) and execute the awk command to print the second field of each file.", "response": "find . -maxdepth 1 -type f -exec awk '{print $2}' \\;"}
{"prompt": "Give a bash command for the following description: delete all the core files in the folder /prog which are bigger than 1KB", "response": "find /prog -type f -size +1000 -print -name core -exec rm {} \\;"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".csv\" in the entire file system and count the number of lines in each file.", "response": "find / -name '*.csv' | xargs wc -l"}
{"prompt": "Give a bash command for the following description: Randomly select one of the following commands and execute it:\necho 'Hello World!'\nOR\nls -l\nOR\ncat file1", "response": "shuf -n 1 <(echo -e \"echo 'Hello World!\\nls -l\\ncat file1\") | sh"}
{"prompt": "Give a bash command for the following description: Find files/directories under current directory that are modified exactly one hour ago", "response": "find . -mtime 1"}
{"prompt": "Give a bash command for the following description: Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding $EXCLUDE/* paths", "response": "find /home/jul/here -type f -iname \"*.php\" ! -path \"$EXCLUDE/*\" -o -iname \"*.js\" ! -path \"$EXCLUDE/*\""}
{"prompt": "Give a bash command for the following description: 717", "response": "echo $(echo {1..1000} | tr ' ' '\\n' | sort -R | head -n 1)"}
{"prompt": "Give a bash command for the following description: Find all files in the home directory and execute a command to replace all occurrences of \"string1\" with \"string2\" in each file.", "response": "find ~/ -type f -exec sed -i 's/string1/string2/g' {} \\;"}
{"prompt": "Give a bash command for the following description: Find a file in the root directory, sort it randomly by numerical order, and display the first one.", "response": "find / -type f | sort -R -n | head -n 1"}
{"prompt": "Give a bash command for the following description: Search the entire file system for files with the extension \".txt\" and execute the command \"sed -i 's/foo/bar/g' {}\" on each of them.", "response": "find / -name \"*.txt\" -exec sed -i 's/foo/bar/g' {} \\;"}
{"prompt": "Give a bash command for the following description: Search the files under and below /directory/containing/files for \"pattern_to_search\"", "response": "find /directory/containing/files -type f -exec grep -H 'pattern_to_search' {} +"}
{"prompt": "Give a bash command for the following description: Search the entire file system for any file name and sort the results in reverse numerical order, then display the first 15 results.", "response": "find / -name '*' | sort -r -n | head -n15"}
{"prompt": "Give a bash command for the following description: Find all files in the current working directory and search for any line that contains any character and list the files that contain that line.", "response": "find $(pwd) -type f | xargs grep -l '.*'"}
{"prompt": "Give a bash command for the following description: Find all files with the extension \".sh\" in the root directory, print the name of the file, and search for lines that start with a combination of uppercase letters and numbers followed by an equals sign.", "response": "find / -name \"*.sh\" | awk -F/ '{print $NF}' | xargs grep -i -e \"^[A-Z0-9]*=\""}
{"prompt": "Give a bash command for the following description: Find all files with the extension .jpg in the current directory and move them to the /tmp directory.", "response": "find . -name \"*.jpg\" -exec mv {} /tmp \\;"}
{"prompt": "Give a bash command for the following description: List \".java\" files that have the same filename and contents", "response": "md5sum *.java | sort | uniq -d"}
{"prompt": "Give a bash command for the following description: Find all .txt files in the /home/user1 directory tree and copy them to /home/backup", "response": "find /home/user1 -name '*.txt' | xargs cp -av --target-directory=/home/backup/ --parents"}
{"prompt": "Give a bash command for the following description: Change the ownership to eva for all files/directories that belong to the user 'george' in the entire file system without traversing to other devices/partitions", "response": "find -x / -user george -print0 | xargs -0 chown eva"}
{"prompt": "Give a bash command for the following description: Find all files in the root directory that were modified within the last day and execute the command \"sed -i 's/^[^#]/#&/' {}\" on each of them.", "response": "find /root -mtime -1 -exec sed -i 's/^[^#]/#&/' {} \\;"}
